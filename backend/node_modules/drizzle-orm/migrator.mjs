import o from"node:crypto";import e from"node:fs";import t from"node:path";function r(r){let n;if("string"==typeof r){const o=e.readFileSync(t.resolve(".",r),"utf8");n=JSON.parse(o).out}else n=r.migrationsFolder;if(!n)throw new Error("no migration folder defined");const s=[],i=`${n}/meta/_journal.json`;if(!e.existsSync(i))throw new Error("Can't find meta/_journal.json file");const a=e.readFileSync(`${n}/meta/_journal.json`).toString(),l=JSON.parse(a);for(const t of l.entries){const r=`${n}/${t.tag}.sql`;try{const r=e.readFileSync(`${n}/${t.tag}.sql`).toString(),i=r.split("--\x3e statement-breakpoint").map((o=>o));s.push({sql:i,bps:t.breakpoints,folderMillis:t.when,hash:o.createHash("sha256").update(r).digest("hex")})}catch{throw new Error(`No file ${r} found in ${n} folder`)}}return s}export{r as readMigrationFiles};
//# sourceMappingURL=migrator.mjs.map
