"use strict";var e=require("../index-59b7992d.cjs"),t=require("../column-builder-b48639f3.cjs"),r=require("../session-b6939bab.cjs");require("../utils-9d882195.cjs"),require("../query-builder-2f2e8229.cjs");class s{constructor(e,t){this.name=e,this.value=t}build(e){return new n(e,this)}}class n{constructor(e,t){this.table=e,this.name=t.name,this.value=t.value}}class i{constructor(e,t){this.reference=()=>{const{columns:t,foreignColumns:r}=e();return{columns:t,foreignTable:r[0].table,foreignColumns:r}},t&&(this._onUpdate=t.onUpdate,this._onDelete=t.onDelete)}onUpdate(e){return this._onUpdate=e,this}onDelete(e){return this._onDelete=e,this}build(e){return new o(e,this)}}class o{constructor(e,t){this.table=e,this.reference=t.reference,this.onUpdate=t._onUpdate,this.onDelete=t._onDelete}getName(){const{columns:e,foreignColumns:t}=this.reference(),s=e.map((e=>e.name)),n=t.map((e=>e.name));return`${[this.table[r.SQLiteTable.Symbol.Name],...s,t[0].table[r.SQLiteTable.Symbol.Name],...n].join("_")}_fk`}}class u extends t.ColumnBuilder{constructor(){super(...arguments),this.foreignKeyConfigs=[]}references(e,t={}){return this.foreignKeyConfigs.push({ref:e,actions:t}),this}buildForeignKeys(e,t){return this.foreignKeyConfigs.map((({ref:r,actions:s})=>((r,s)=>{const n=new i((()=>{const t=r();return{columns:[e],foreignColumns:[t]}}));return s.onUpdate&&n.onUpdate(s.onUpdate),s.onDelete&&n.onDelete(s.onDelete),n.build(t)})(r,s)))}}class l extends e.Column{}class a extends u{build(e){return new c(e,this.config)}}class c extends l{getSQLType(){return"blob"}mapFromDriverValue(e){return JSON.parse(e.toString())}mapToDriverValue(e){return Buffer.from(JSON.stringify(e))}}class p extends u{build(e){return new m(e,this.config)}}class m extends l{getSQLType(){return"blob"}}class d extends u{constructor(e,t,r){super(e),this.config.fieldConfig=t,this.config.customTypeParams=r}build(e){return new x(e,this.config)}}class x extends l{constructor(e,t){super(e,t),this.sqlName=t.customTypeParams.dataType(t.fieldConfig),this.mapTo=t.customTypeParams.toDriver,this.mapFrom=t.customTypeParams.fromDriver}getSQLType(){return this.sqlName}mapFromDriverValue(e){return"function"==typeof this.mapFrom?this.mapFrom(e):e}mapToDriverValue(e){return"function"==typeof this.mapTo?this.mapTo(e):e}}class f extends u{constructor(e){super(e),this.config.autoIncrement=!1}primaryKey(e){return e?.autoIncrement&&(this.config.autoIncrement=!0),this.config.hasDefault=!0,super.primaryKey()}}class S extends l{constructor(){super(...arguments),this.autoIncrement=this.config.autoIncrement}getSQLType(){return"integer"}}class h extends f{build(e){return new g(e,this.config)}}class g extends S{}class Q extends f{constructor(e,t){super(e),this.config.mode=t}defaultNow(){return this.default(e.sql`(cast((julianday('now') - 2440587.5)*86400000 as integer))`)}build(e){return new L(e,this.config)}}class L extends S{constructor(){super(...arguments),this.mode=this.config.mode}mapFromDriverValue(e){return"timestamp"===this.config.mode?new Date(1e3*e):new Date(e)}mapToDriverValue(e){const t=e.getTime();return"timestamp"===this.config.mode?Math.floor(t/1e3):t}}function b(e,t){return"timestamp"===t?.mode||"timestamp_ms"===t?.mode?new Q(e,t.mode):new h(e)}const y=b;class w extends u{build(e){return new B(e,this.config)}}class B extends l{getSQLType(){return"numeric"}}class T extends u{build(e){return new C(e,this.config)}}class C extends l{getSQLType(){return"real"}}class D extends u{constructor(e,t){super(e),this.config.enumValues=t.enum??[]}build(e){return new V(e,this.config)}}class V extends l{constructor(e,t){super(e,t),this.enumValues=this.config.enumValues}getSQLType(){return"text"}}class q{constructor(e,t){this.name=e,this.unique=t}on(...e){return new I(this.name,e,this.unique)}}class I{constructor(e,t,r){this.config={name:e,columns:t,unique:r,where:void 0}}where(e){return this.config.where=e,this}build(e){return new v(this.config,e)}}class v{constructor(e,t){this.config={...e,table:t}}}class K{constructor(e){this.columns=e}build(e){return new U(e,this.columns)}}class U{constructor(e,t){this.table=e,this.columns=t}getName(){return`${this.table[r.SQLiteTable.Symbol.Name]}_${this.columns.map((e=>e.name)).join("_")}_pk`}}class N{constructor(e,t){this.name=e,this.column=t}build(e){return new j(e,this)}}class j{constructor(e,t){this.table=e,this.name=t.name,this.column=t.column}}exports.BaseSQLiteDatabase=r.BaseSQLiteDatabase,exports.ExtraConfigBuilder=r.ExtraConfigBuilder,exports.InlineForeignKeys=r.InlineForeignKeys,exports.ManualViewBuilder=r.ManualViewBuilder,exports.PreparedQuery=r.PreparedQuery,exports.QueryBuilder=r.QueryBuilder,exports.SQLiteAsyncDialect=r.SQLiteAsyncDialect,exports.SQLiteDelete=r.SQLiteDelete,exports.SQLiteDialect=r.SQLiteDialect,exports.SQLiteInsert=r.SQLiteInsert,exports.SQLiteInsertBuilder=r.SQLiteInsertBuilder,exports.SQLiteSelect=r.SQLiteSelect,exports.SQLiteSelectBuilder=r.SQLiteSelectBuilder,exports.SQLiteSelectQueryBuilder=r.SQLiteSelectQueryBuilder,exports.SQLiteSession=r.SQLiteSession,exports.SQLiteSyncDialect=r.SQLiteSyncDialect,exports.SQLiteTable=r.SQLiteTable,exports.SQLiteTransaction=r.SQLiteTransaction,exports.SQLiteUpdate=r.SQLiteUpdate,exports.SQLiteUpdateBuilder=r.SQLiteUpdateBuilder,exports.SQLiteView=r.SQLiteView,exports.SQLiteViewBase=r.SQLiteViewBase,exports.SQLiteViewConfig=r.SQLiteViewConfig,exports.ViewBuilder=r.ViewBuilder,exports.ViewBuilderCore=r.ViewBuilderCore,exports.sqliteTable=r.sqliteTable,exports.sqliteTableCreator=r.sqliteTableCreator,exports.sqliteView=r.sqliteView,exports.view=r.view,exports.Check=n,exports.CheckBuilder=s,exports.ForeignKey=o,exports.ForeignKeyBuilder=i,exports.Index=v,exports.IndexBuilder=I,exports.IndexBuilderOn=q,exports.PrimaryKey=U,exports.PrimaryKeyBuilder=K,exports.SQLiteBaseInteger=S,exports.SQLiteBaseIntegerBuilder=f,exports.SQLiteBlobBuffer=m,exports.SQLiteBlobBufferBuilder=p,exports.SQLiteBlobJson=c,exports.SQLiteBlobJsonBuilder=a,exports.SQLiteColumn=l,exports.SQLiteColumnBuilder=u,exports.SQLiteCustomColumn=x,exports.SQLiteCustomColumnBuilder=d,exports.SQLiteInteger=g,exports.SQLiteIntegerBuilder=h,exports.SQLiteNumeric=B,exports.SQLiteNumericBuilder=w,exports.SQLiteReal=C,exports.SQLiteRealBuilder=T,exports.SQLiteText=V,exports.SQLiteTextBuilder=D,exports.SQLiteTimestamp=L,exports.SQLiteTimestampBuilder=Q,exports.Unique=j,exports.UniqueBuilder=N,exports.alias=function(t,r){return new Proxy(t,new e.TableAliasProxyHandler(r,!1))},exports.blob=function(e,t){return"json"===t?.mode?new a(e):new p(e)},exports.check=function(e,t){return new s(e,t)},exports.customType=function(e){return(t,r)=>new d(t,r,e)},exports.foreignKey=function(e){return new i((function(){const{columns:t,foreignColumns:r}=e();return{columns:t,foreignColumns:r}}))},exports.getTableConfig=function(t){const n=Object.values(t[r.SQLiteTable.Symbol.Columns]),o=[],u=[],l=[],a=Object.values(t[r.SQLiteTable.Symbol.InlineForeignKeys]),c=t[e.Table.Symbol.Name],p=t[r.SQLiteTable.Symbol.ExtraConfigBuilder];if(void 0!==p){const e=p(t[r.SQLiteTable.Symbol.Columns]);for(const r of Object.values(e))r instanceof I?o.push(r.build(t)):r instanceof s?u.push(r.build(t)):r instanceof K?l.push(r.build(t)):r instanceof i&&a.push(r.build(t))}return{columns:n,indexes:o,foreignKeys:a,checks:u,primaryKeys:l,name:c}},exports.getViewConfig=function(t){return{...t[e.ViewBaseConfig],...t[r.SQLiteViewConfig]}},exports.index=function(e){return new q(e,!1)},exports.int=y,exports.integer=b,exports.numeric=function(e){return new w(e)},exports.primaryKey=function(...e){return new K(e)},exports.real=function(e){return new T(e)},exports.text=function(e,t={}){return new D(e,t)},exports.unique=function(e,t){return new N(e,t)},exports.uniqueIndex=function(e){return new q(e,!0)};
//# sourceMappingURL=index.cjs.map
