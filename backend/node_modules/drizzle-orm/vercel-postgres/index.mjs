import{N as t,D as e}from"../logger-2598bf05.mjs";import{VercelPool as s}from"@vercel/postgres";import{k as r,s as i}from"../index-b71998f1.mjs";import{P as a,a as n,b as o,d as c,c as l}from"../session-c891400d.mjs";import{m as u}from"../utils-e6870670.mjs";import"../query-promise-a65edd44.mjs";import"../query-builder-2fcde2f0.mjs";import"../column-builder-592f0191.mjs";class h extends a{constructor(t,e,s,r,i,a){super(),this.client=t,this.params=s,this.logger=r,this.fields=i,this.rawQuery={name:a,text:e},this.query={name:a,text:e,rowMode:"array"}}execute(t={}){const e=r(this.params,t);this.logger.logQuery(this.rawQuery.text,e);const{fields:s,rawQuery:i,client:a,query:n,joinsNotNullableMap:o}=this;if(!s)return a.query(i,e);return a.query(n,e).then((t=>t.rows.map((t=>u(s,t,o)))))}all(t={}){const e=r(this.params,t);return this.logger.logQuery(this.rawQuery.text,e),this.client.query(this.rawQuery,e).then((t=>t.rows))}values(t={}){const e=r(this.params,t);return this.logger.logQuery(this.rawQuery.text,e),this.client.query(this.query,e).then((t=>t.rows))}}class g extends n{constructor(e,s,r={}){super(s),this.client=e,this.options=r,this.logger=r.logger??new t}prepareQuery(t,e,s){return new h(this.client,t.sql,t.params,this.logger,e,s)}async query(t,e){this.logger.logQuery(t,e);return await this.client.query({rowMode:"array",text:t,values:e})}async queryObjects(t,e){return this.client.query(t,e)}async transaction(t,e){const r=this.client instanceof s?new g(await this.client.connect(),this.dialect,this.options):this,a=new w(this.dialect,r);await a.execute(i`begin${e?i` ${a.getTransactionConfigSQL(e)}`:void 0}`);try{const e=await t(a);return await a.execute(i`commit`),e}catch(t){throw await a.execute(i`rollback`),t}finally{this.client instanceof s&&r.client.release()}}}class w extends o{async transaction(t){const e=`sp${this.nestedIndex+1}`,s=new w(this.dialect,this.session,this.nestedIndex+1);await s.execute(i.raw(`savepoint ${e}`));try{const r=await t(s);return await s.execute(i.raw(`release savepoint ${e}`)),r}catch(t){throw await s.execute(i.raw(`rollback to savepoint ${e}`)),t}}}class p{constructor(t,e,s={}){this.client=t,this.dialect=e,this.options=s,this.initMappers()}createSession(){return new g(this.client,this.dialect,{logger:this.options.logger})}initMappers(){}}function m(t,s={}){const r=new l;let i;!0===s.logger?i=new e:!1!==s.logger&&(i=s.logger);const a=new p(t,r,{logger:i}).createSession();return new c(r,a)}export{p as VercelPgDriver,h as VercelPgPreparedQuery,g as VercelPgSession,w as VercelPgTransaction,m as drizzle};
//# sourceMappingURL=index.mjs.map
