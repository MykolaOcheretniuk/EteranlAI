import{N as t,D as e}from"../logger-2598bf05.mjs";import{P as s,t as r,u as i,g as n,h as a}from"../session-8a621f09.mjs";import{once as o}from"node:events";import{k as c,s as l}from"../index-b71998f1.mjs";import{m as u}from"../utils-e6870670.mjs";import"../query-promise-a65edd44.mjs";import"../column-builder-592f0191.mjs";import"../query-builder-2fcde2f0.mjs";class h extends s{constructor(t,e,s,r,i){super(),this.client=t,this.params=s,this.logger=r,this.fields=i,this.rawQuery={sql:e,typeCast:function(t,e){return"TIMESTAMP"===t.type||"DATETIME"===t.type||"DATE"===t.type?t.string():e()}},this.query={sql:e,rowsAsArray:!0,typeCast:function(t,e){return"TIMESTAMP"===t.type||"DATETIME"===t.type||"DATE"===t.type?t.string():e()}}}async execute(t={}){const e=c(this.params,t);this.logger.logQuery(this.rawQuery.sql,e);const{fields:s,client:r,rawQuery:i,query:n,joinsNotNullableMap:a}=this;if(!s)return r.query(i,e);return r.query(n,e).then((t=>t[0].map((t=>u(s,t,a)))))}async*iterator(t={}){const e=c(this.params,t),s=(g(this.client)?await this.client.getConnection():this.client).connection,{fields:r,query:i,rawQuery:n,joinsNotNullableMap:a,client:l}=this,h=(r?s.query(i,e):s.query(n,e)).stream();function y(){h.pause()}h.on("data",y);try{const t=o(h,"end"),e=o(h,"error");for(;;){h.resume();const s=await Promise.race([t,e,new Promise((t=>h.once("data",t)))]);if(void 0===s||Array.isArray(s)&&0===s.length)break;if(s instanceof Error)throw s;yield r?u(r,s,a):s}}finally{h.off("data",y),g(l)&&s.end()}}}class y extends r{constructor(e,s,r={}){super(s),this.client=e,this.options=r,this.logger=r.logger??new t}prepareQuery(t,e){return new h(this.client,t.sql,t.params,this.logger,e)}async query(t,e){this.logger.logQuery(t,e);return await this.client.query({sql:t,values:e,rowsAsArray:!0,typeCast:function(t,e){return"TIMESTAMP"===t.type||"DATETIME"===t.type||"DATE"===t.type?t.string():e()}})}all(t){const e=this.dialect.sqlToQuery(t);return this.logger.logQuery(e.sql,e.params),this.client.execute(e.sql,e.params).then((t=>t[0]))}async transaction(t,e){const s=g(this.client)?new y(await this.client.getConnection(),this.dialect,this.options):this,r=new p(this.dialect,s);if(e){const t=this.getSetTransactionSQL(e);t&&await r.execute(t);const s=this.getStartTransactionSQL(e);await(s?r.execute(s):r.execute(l`begin`))}else await r.execute(l`begin`);try{const e=await t(r);return await r.execute(l`commit`),e}catch(t){throw await r.execute(l`rollback`),t}finally{g(this.client)&&s.client.release()}}}class p extends i{async transaction(t){const e=`sp${this.nestedIndex+1}`,s=new p(this.dialect,this.session,this.nestedIndex+1);await s.execute(l.raw(`savepoint ${e}`));try{const r=await t(s);return await s.execute(l.raw(`release savepoint ${e}`)),r}catch(t){throw await s.execute(l.raw(`rollback to savepoint ${e}`)),t}}}function g(t){return"getConnection"in t}class m{constructor(t,e,s={}){this.client=t,this.dialect=e,this.options=s}createSession(){return new y(this.client,this.dialect,{logger:this.options.logger})}}function w(t,s={}){const r=new a;let i;!0===s.logger?i=new e:!1!==s.logger&&(i=s.logger),function(t){return"function"==typeof t.promise}(t)&&(t=t.promise());const o=new m(t,r,{logger:i}).createSession();return new n(r,o)}export{m as MySql2Driver,h as MySql2PreparedQuery,y as MySql2Session,p as MySql2Transaction,n as MySqlDatabase,w as drizzle};
//# sourceMappingURL=index.mjs.map
