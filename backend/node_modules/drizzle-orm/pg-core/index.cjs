"use strict";var e=require("../index-59b7992d.cjs"),r=require("../session-ef1ef979.cjs");require("../utils-9d882195.cjs"),require("../query-promise-2c5b43ab.cjs"),require("../query-builder-2f2e8229.cjs"),require("../column-builder-b48639f3.cjs");class t extends r.PgColumnBuilder{build(e){return new i(e,this.config)}}class i extends r.PgColumn{getSQLType(){return"bigint"}mapFromDriverValue(e){return"number"==typeof e?e:Number(e)}}class s extends r.PgColumnBuilder{build(e){return new n(e,this.config)}}class n extends r.PgColumn{getSQLType(){return"bigint"}mapFromDriverValue(e){return BigInt(e)}}class o extends r.PgColumnBuilder{constructor(e){super(e),this.config.hasDefault=!0,this.config.notNull=!0}build(e){return new u(e,this.config)}}class u extends r.PgColumn{getSQLType(){return"bigserial"}mapFromDriverValue(e){return"number"==typeof e?e:Number(e)}}class l extends r.PgColumnBuilder{constructor(e){super(e),this.config.hasDefault=!0}build(e){return new a(e,this.config)}}class a extends r.PgColumn{getSQLType(){return"bigserial"}mapFromDriverValue(e){return BigInt(e)}}class g extends r.PgColumnBuilder{build(e){return new p(e,this.config)}}class p extends r.PgColumn{getSQLType(){return"boolean"}}class c extends r.PgColumnBuilder{constructor(e,r){super(e),this.config.length=r.length,this.config.enumValues=r.enum??[]}build(e){return new d(e,this.config)}}class d extends r.PgColumn{constructor(){super(...arguments),this.length=this.config.length,this.enumValues=this.config.enumValues}getSQLType(){return void 0===this.length?"char":`char(${this.length})`}}class m extends r.PgColumnBuilder{build(e){return new x(e,this.config)}}class x extends r.PgColumn{getSQLType(){return"cidr"}}class P extends r.PgColumnBuilder{constructor(e,r,t){super(e),this.config.fieldConfig=r,this.config.customTypeParams=t}build(e){return new h(e,this.config)}}class h extends r.PgColumn{constructor(e,r){super(e,r),this.sqlName=r.customTypeParams.dataType(r.fieldConfig),this.mapTo=r.customTypeParams.toDriver,this.mapFrom=r.customTypeParams.fromDriver}getSQLType(){return this.sqlName}mapFromDriverValue(e){return"function"==typeof this.mapFrom?this.mapFrom(e):e}mapToDriverValue(e){return"function"==typeof this.mapTo?this.mapTo(e):e}}class f extends r.PgColumnBuilder{build(e){return new B(e,this.config)}}class B extends r.PgColumn{getSQLType(){return"double precision"}mapFromDriverValue(e){return"string"==typeof e?Number.parseFloat(e):e}}const w=Symbol("isPgEnum");class C extends r.PgColumnBuilder{constructor(e,r){super(e),this.config.enum=r}build(e){return new y(e,this.config)}}class y extends r.PgColumn{constructor(e,r){super(e,r),this.enum=this.config.enum,this.enumValues=this.config.enum.enumValues,this.enum=r.enum}getSQLType(){return this.enum.enumName}}class b extends r.PgColumnBuilder{build(e){return new V(e,this.config)}}class V extends r.PgColumn{getSQLType(){return"inet"}}class S extends r.PgColumnBuilder{build(e){return new T(e,this.config)}}class T extends r.PgColumn{getSQLType(){return"integer"}mapFromDriverValue(e){return"string"==typeof e?Number.parseInt(e):e}}class D extends r.PgColumnBuilder{constructor(e,r){super(e),this.config.intervalConfig=r}build(e){return new I(e,this.config)}}class I extends r.PgColumn{constructor(){super(...arguments),this.fields=this.config.intervalConfig.fields,this.precision=this.config.intervalConfig.precision}getSQLType(){return`interval${this.fields?` ${this.fields}`:""}${this.precision?`(${this.precision})`:""}`}}class M extends r.PgColumnBuilder{build(e){return new Q(e,this.config)}}class Q extends r.PgColumn{getSQLType(){return"macaddr"}}class v extends r.PgColumnBuilder{build(e){return new N(e,this.config)}}class N extends r.PgColumn{getSQLType(){return"macaddr8"}}class L extends r.PgColumnBuilder{constructor(e,r){super(e),this.config.length=r}build(e){return new z(e,this.config)}}class z extends r.PgColumn{constructor(e,r){super(e,r),this.mapFromDriverValue=e=>"string"==typeof e?Number.parseFloat(e):e}getSQLType(){return"real"}}class F extends r.PgColumnBuilder{constructor(e){super(e),this.config.hasDefault=!0,this.config.notNull=!0}build(e){return new K(e,this.config)}}class K extends r.PgColumn{getSQLType(){return"serial"}}class j extends r.PgColumnBuilder{build(e){return new q(e,this.config)}}class q extends r.PgColumn{constructor(){super(...arguments),this.mapFromDriverValue=e=>"string"==typeof e?Number(e):e}getSQLType(){return"smallint"}}class U extends r.PgColumnBuilder{constructor(e){super(e),this.config.hasDefault=!0,this.config.notNull=!0}build(e){return new A(e,this.config)}}class A extends r.PgColumn{getSQLType(){return"serial"}}class W extends r.PgColumnBuilder{constructor(e,r){super(e),this.config.enumValues=r.enum??[]}build(e){return new k(e,this.config)}}class k extends r.PgColumn{constructor(){super(...arguments),this.enumValues=this.config.enumValues}getSQLType(){return"text"}}class E extends r.PgColumnBuilder{constructor(e,r){super(e),this.config.length=r.length,this.config.enumValues=r.enum??[]}build(e){return new J(e,this.config)}}class J extends r.PgColumn{constructor(){super(...arguments),this.length=this.config.length,this.enumValues=this.config.enumValues}getSQLType(){return void 0===this.length?"varchar":`varchar(${this.length})`}}class ${constructor(e){this.schemaName=e,this.table=(e,t,i)=>r.pgTableWithSchema(e,t,i,this.schemaName),this.view=(e,t)=>r.pgViewWithSchema(e,t,this.schemaName),this.materializedView=(e,t)=>r.pgMaterializedViewWithSchema(e,t,this.schemaName)}}exports.Check=r.Check,exports.CheckBuilder=r.CheckBuilder,exports.DefaultViewBuilderCore=r.DefaultViewBuilderCore,exports.ExtraConfigBuilder=r.ExtraConfigBuilder,exports.ForeignKey=r.ForeignKey,exports.ForeignKeyBuilder=r.ForeignKeyBuilder,exports.Index=r.Index,exports.IndexBuilder=r.IndexBuilder,exports.IndexBuilderOn=r.IndexBuilderOn,exports.InlineForeignKeys=r.InlineForeignKeys,exports.ManualMaterializedViewBuilder=r.ManualMaterializedViewBuilder,exports.ManualViewBuilder=r.ManualViewBuilder,exports.MaterializedViewBuilder=r.MaterializedViewBuilder,exports.MaterializedViewBuilderCore=r.MaterializedViewBuilderCore,exports.PgArray=r.PgArray,exports.PgArrayBuilder=r.PgArrayBuilder,exports.PgColumn=r.PgColumn,exports.PgColumnBuilder=r.PgColumnBuilder,exports.PgDatabase=r.PgDatabase,exports.PgDate=r.PgDate,exports.PgDateBuilder=r.PgDateBuilder,exports.PgDateString=r.PgDateString,exports.PgDateStringBuilder=r.PgDateStringBuilder,exports.PgDelete=r.PgDelete,exports.PgDialect=r.PgDialect,exports.PgInsert=r.PgInsert,exports.PgInsertBuilder=r.PgInsertBuilder,exports.PgJson=r.PgJson,exports.PgJsonBuilder=r.PgJsonBuilder,exports.PgJsonb=r.PgJsonb,exports.PgJsonbBuilder=r.PgJsonbBuilder,exports.PgMaterializedView=r.PgMaterializedView,exports.PgMaterializedViewConfig=r.PgMaterializedViewConfig,exports.PgNumeric=r.PgNumeric,exports.PgNumericBuilder=r.PgNumericBuilder,exports.PgRefreshMaterializedView=r.PgRefreshMaterializedView,exports.PgSelect=r.PgSelect,exports.PgSelectBuilder=r.PgSelectBuilder,exports.PgSelectQueryBuilder=r.PgSelectQueryBuilder,exports.PgSession=r.PgSession,exports.PgTable=r.PgTable,exports.PgTime=r.PgTime,exports.PgTimeBuilder=r.PgTimeBuilder,exports.PgTimestamp=r.PgTimestamp,exports.PgTimestampBuilder=r.PgTimestampBuilder,exports.PgTimestampString=r.PgTimestampString,exports.PgTimestampStringBuilder=r.PgTimestampStringBuilder,exports.PgTransaction=r.PgTransaction,exports.PgUUID=r.PgUUID,exports.PgUUIDBuilder=r.PgUUIDBuilder,exports.PgUpdate=r.PgUpdate,exports.PgUpdateBuilder=r.PgUpdateBuilder,exports.PgView=r.PgView,exports.PgViewBase=r.PgViewBase,exports.PgViewConfig=r.PgViewConfig,exports.PreparedQuery=r.PreparedQuery,exports.PrimaryKey=r.PrimaryKey,exports.PrimaryKeyBuilder=r.PrimaryKeyBuilder,exports.QueryBuilder=r.QueryBuilder,exports.ViewBuilder=r.ViewBuilder,exports.check=r.check,exports.date=r.date,exports.decimal=r.decimal,exports.foreignKey=r.foreignKey,exports.getMaterializedViewConfig=r.getMaterializedViewConfig,exports.getTableConfig=r.getTableConfig,exports.getViewConfig=r.getViewConfig,exports.index=r.index,exports.json=r.json,exports.jsonb=r.jsonb,exports.makePgArray=r.makePgArray,exports.numeric=r.numeric,exports.parsePgArray=r.parsePgArray,exports.parsePgNestedArray=r.parsePgNestedArray,exports.pgMaterializedView=r.pgMaterializedView,exports.pgMaterializedViewWithSchema=r.pgMaterializedViewWithSchema,exports.pgTable=r.pgTable,exports.pgTableCreator=r.pgTableCreator,exports.pgTableWithSchema=r.pgTableWithSchema,exports.pgView=r.pgView,exports.pgViewWithSchema=r.pgViewWithSchema,exports.primaryKey=r.primaryKey,exports.time=r.time,exports.timestamp=r.timestamp,exports.uniqueIndex=r.uniqueIndex,exports.uuid=r.uuid,exports.PgBigInt53=i,exports.PgBigInt53Builder=t,exports.PgBigInt64=n,exports.PgBigInt64Builder=s,exports.PgBigSerial53=u,exports.PgBigSerial53Builder=o,exports.PgBigSerial64=a,exports.PgBigSerial64Builder=l,exports.PgBoolean=p,exports.PgBooleanBuilder=g,exports.PgChar=d,exports.PgCharBuilder=c,exports.PgCidr=x,exports.PgCidrBuilder=m,exports.PgCustomColumn=h,exports.PgCustomColumnBuilder=P,exports.PgDoublePrecision=B,exports.PgDoublePrecisionBuilder=f,exports.PgEnumColumn=y,exports.PgEnumColumnBuilder=C,exports.PgInet=V,exports.PgInetBuilder=b,exports.PgInteger=T,exports.PgIntegerBuilder=S,exports.PgInterval=I,exports.PgIntervalBuilder=D,exports.PgMacaddr=Q,exports.PgMacaddr8=N,exports.PgMacaddr8Builder=v,exports.PgMacaddrBuilder=M,exports.PgReal=z,exports.PgRealBuilder=L,exports.PgSchema=$,exports.PgSerial=K,exports.PgSerialBuilder=F,exports.PgSmallInt=q,exports.PgSmallIntBuilder=j,exports.PgSmallSerial=A,exports.PgSmallSerialBuilder=U,exports.PgText=k,exports.PgTextBuilder=W,exports.PgVarchar=J,exports.PgVarcharBuilder=E,exports.alias=function(r,t){return new Proxy(r,new e.TableAliasProxyHandler(t,!1))},exports.bigint=function(e,r){return"number"===r.mode?new t(e):new s(e)},exports.bigserial=function(e,{mode:r}){return"number"===r?new o(e):new l(e)},exports.boolean=function(e){return new g(e)},exports.char=function(e,r={}){return new c(e,r)},exports.cidr=function(e){return new m(e)},exports.customType=function(e){return(r,t)=>new P(r,t,e)},exports.doublePrecision=function(e){return new f(e)},exports.inet=function(e){return new b(e)},exports.integer=function(e){return new S(e)},exports.interval=function(e,r={}){return new D(e,r)},exports.isPgEnum=function(e){return!!e&&"function"==typeof e&&w in e},exports.isPgSchema=function(e){return e instanceof $},exports.macaddr=function(e){return new M(e)},exports.macaddr8=function(e){return new v(e)},exports.pgEnum=function(e,r){const t=Object.assign((e=>new C(e,t)),{enumName:e,enumValues:r,[w]:!0});return t},exports.pgSchema=function(e){if("public"===e)throw new Error("You can't specify 'public' as schema name. Postgres is using public schema by default. If you want to use 'public' schema, just use pgTable() instead of creating a schema");return new $(e)},exports.real=function(e){return new L(e)},exports.serial=function(e){return new F(e)},exports.smallint=function(e){return new j(e)},exports.smallserial=function(e){return new U(e)},exports.text=function(e,r={}){return new W(e,r)},exports.varchar=function(e,r={}){return new E(e,r)};
//# sourceMappingURL=index.cjs.map
