"use strict";class e{constructor(e,r){this.table=e,this.config=r,this.name=r.name,this.notNull=r.notNull,this.default=r.default,this.hasDefault=r.hasDefault,this.primary=r.primaryKey}mapFromDriverValue(e){return e}mapToDriverValue(e){return e}}var r;const s=Symbol("Name"),t=Symbol("Schema"),n=Symbol("Columns"),i=Symbol("OriginalName"),a=Symbol("BaseName"),o=Symbol("IsAlias");class l{constructor(e,n,o){this[r]=!1,this[s]=this[i]=e,this[t]=n,this[a]=o}}r=o,l.Symbol={Name:s,Schema:t,OriginalName:i,Columns:n,BaseName:a,IsAlias:o};const u=Symbol("ViewBaseConfig");class c{constructor({name:e,schema:r,selectedFields:s,query:t}){this[u]={name:e,originalName:e,schema:r,selectedFields:s,query:t,isExisting:!t,isAlias:!1}}}class m{constructor(e){this.table=e}get(e,r){return"table"===r?this.table:e[r]}}class p{constructor(e,r){this.alias=e,this.replaceOriginalName=r}get(r,s){if(s===l.Symbol.IsAlias)return!0;if(s===l.Symbol.Name)return this.alias;if(this.replaceOriginalName&&s===l.Symbol.OriginalName)return this.alias;if(s===u)return{...r[u],name:this.alias,isAlias:!0};if(s===l.Symbol.Columns){const e=r[l.Symbol.Columns];if(!e)return e;const s={};return Object.keys(e).map((t=>{s[t]=new Proxy(e[t],new m(new Proxy(r,this)))})),s}const t=r[s];return t instanceof e?new Proxy(t,new m(new Proxy(r,this))):t}}const h=Symbol("SubqueryConfig");class f{constructor(e,r,s,t=!1){this[h]={sql:e,selection:r,alias:s,isWith:t}}}class y{constructor(e){this.config={...e}}get(r,s){if(s===h)return{...r[h],selection:new Proxy(r[h].selection,this)};if(s===u)return{...r[u],selectedFields:new Proxy(r[u].selectedFields,this)};if("symbol"==typeof s)return r[s];const t=(r instanceof f?r[h].selection:r instanceof c?r[u].selectedFields:r)[s];if(t instanceof b.Aliased){if("sql"===this.config.sqlAliasedBehavior&&!t.isSelectionField)return t.sql;const e=t.clone();return e.isSelectionField=!0,e}if(t instanceof b){if("sql"===this.config.sqlBehavior)return t;throw new Error(`You tried to reference "${s}" field from a subquery, which is a raw SQL field, but it doesn't have an alias declared. Please add an alias to the field using ".as('alias')" method.`)}return t instanceof e?this.config.alias?new Proxy(t,new m(new Proxy(t.table,new p(this.config.alias,this.config.replaceOriginalName??!1)))):t:"object"!=typeof t||null===t?t:new Proxy(t,new y(this.config))}}function d(e){return"object"==typeof e&&null!==e&&"getSQL"in e&&"function"==typeof e.getSQL}class S{constructor(e){this.value=Array.isArray(e)?e:[e]}}class b{constructor(e){this.queryChunks=e,this.decoder=g,this.shouldInlineParams=!1}append(e){return this.queryChunks.push(...e.queryChunks),this}toQuery(e){return this.buildQueryFromSourceParams(this.queryChunks,e)}buildQueryFromSourceParams(r,s){const t=Object.assign({},s,{inlineParams:s.inlineParams||this.shouldInlineParams,paramStartIndex:s.paramStartIndex||{value:0}}),{escapeName:n,escapeParam:i,prepareTyping:a,inlineParams:o,paramStartIndex:m}=t;return function(e){const r={sql:"",params:[]};for(const s of e)r.sql+=s.sql,r.params.push(...s.params),r.typings&&s.typings?.length&&r.typings.push(...s.typings);return r}(r.map((r=>{if(r instanceof S)return{sql:r.value.join(""),params:[]};if(r instanceof x)return{sql:n(r.value),params:[]};if(void 0===r)return{sql:"",params:[]};if(Array.isArray(r)){const e=[new S("(")];for(const[s,t]of r.entries())e.push(t),s<r.length-1&&e.push(new S(", "));return e.push(new S(")")),this.buildQueryFromSourceParams(e,t)}if(r instanceof b)return this.buildQueryFromSourceParams(r.queryChunks,{...t,inlineParams:o||r.shouldInlineParams});if(r instanceof l){const e=r[l.Symbol.Schema],s=r[l.Symbol.Name];return{sql:void 0===e?n(s):n(e)+"."+n(s),params:[]}}if(r instanceof e)return{sql:n(r.table[l.Symbol.Name])+"."+n(r.name),params:[]};if(r instanceof c){const e=r[u].schema,s=r[u].name;return{sql:void 0===e?n(s):n(e)+"."+n(s),params:[]}}if(r instanceof P){const e=null===r.value?null:r.encoder.mapToDriverValue(r.value);if(e instanceof b)return this.buildQueryFromSourceParams([e],t);if(o)return{sql:this.mapInlineParam(e,t),params:[]};let s;return void 0!==a&&(s=[a(r.encoder)]),{sql:i(m.value++,e),params:[e],typings:s}}return r instanceof b.Aliased&&void 0!==r.fieldAlias?{sql:n(r.fieldAlias),params:[]}:r instanceof f?r[h].isWith?{sql:n(r[h].alias),params:[]}:this.buildQueryFromSourceParams([new S("("),r[h].sql,new S(") "),new x(r[h].alias)],t):d(r)?this.buildQueryFromSourceParams([new S("("),r.getSQL(),new S(")")],t):o?{sql:this.mapInlineParam(r,t),params:[]}:{sql:i(m.value++,r),params:[r]}})))}mapInlineParam(e,{escapeString:r}){if(null===e)return"null";if("number"==typeof e||"boolean"==typeof e)return e.toString();if("string"==typeof e)return r(e);if("object"==typeof e){const s=e.toString();return r("[object Object]"===s?JSON.stringify(e):s)}throw new Error("Unexpected param value: "+e)}getSQL(){return this}as(e){return void 0===e?this:new b.Aliased(this,e)}mapWith(e){return this.decoder="function"==typeof e?{mapFromDriverValue:e}:e,this}inlineParams(){return this.shouldInlineParams=!0,this}}class x{constructor(e){this.value=e}}const g={mapFromDriverValue:e=>e},w={mapToDriverValue:e=>e},q={...g,...w};class P{constructor(e,r=w){this.value=e,this.encoder=r}}function v(e,...r){const s=[];(r.length>0||e.length>0&&""!==e[0])&&s.push(new S(e[0]));for(const[t,n]of r.entries())s.push(n,new S(e[t+1]));return new b(s)}!function(e){e.empty=function(){return new b([])},e.fromList=function(e){return new b(e)},e.raw=function(e){return new b([new S(e)])},e.join=function(r,s){const t=[];for(const[e,n]of r.entries())e>0&&t.push(s),t.push(n);return e.fromList(t)}}(v||(v={})),function(e){class r{constructor(e,r){this.sql=e,this.fieldAlias=r,this.isSelectionField=!1}getSQL(){return this.sql}clone(){return new r(this.sql,this.fieldAlias)}}e.Aliased=r}(b||(b={}));class N{constructor(e){this.name=e}}exports.BaseName=a,exports.Column=e,exports.ColumnAliasProxyHandler=m,exports.Columns=n,exports.FakePrimitiveParam=class{},exports.IsAlias=o,exports.Name=x,exports.OriginalName=i,exports.Param=P,exports.Placeholder=N,exports.SQL=b,exports.Schema=t,exports.SelectionProxyHandler=y,exports.StringChunk=S,exports.Subquery=f,exports.SubqueryConfig=h,exports.Table=l,exports.TableAliasProxyHandler=p,exports.TableName=s,exports.View=c,exports.ViewBaseConfig=u,exports.WithSubquery=class extends f{},exports.fillPlaceholders=function(e,r){return e.map((e=>{if(e instanceof N){if(!(e.name in r))throw new Error(`No value for placeholder "${e.name}" was provided`);return r[e.name]}return e}))},exports.getTableName=function(e){return e[s]},exports.isDriverValueEncoder=function(e){return"object"==typeof e&&null!==e&&"mapToDriverValue"in e&&"function"==typeof e.mapToDriverValue},exports.isSQLWrapper=d,exports.name=function(e){return new x(e)},exports.noopDecoder=g,exports.noopEncoder=w,exports.noopMapper=q,exports.param=function(e,r){return new P(e,r)},exports.placeholder=function(e){return new N(e)},exports.sql=v;
//# sourceMappingURL=index-59b7992d.cjs.map
