import{N as s,D as t}from"../logger-2598bf05.mjs";import{S as e,a as r,P as i,B as n,b as o}from"../session-b977ce56.mjs";import{s as a,k as l}from"../index-b71998f1.mjs";import{m as h}from"../utils-e6870670.mjs";import"../query-builder-2fcde2f0.mjs";class u extends e{constructor(t,e,r={}){super(e),this.client=t,this.logger=r.logger??new s}exec(s){this.client.exec(s)}prepareQuery(s,t){const e=this.client.prepare(s.sql);return new c(e,s.sql,s.params,this.logger,t)}transaction(s,t={}){const e=new g(this.dialect,this);let r;return this.client.transaction((()=>{r=s(e)}))[t.behavior??"deferred"](),r}}class g extends r{transaction(s){const t=`sp${this.nestedIndex}`,e=new g(this.dialect,this.session,this.nestedIndex+1);this.session.run(a.raw(`savepoint ${t}`));try{const r=s(e);return this.session.run(a.raw(`release savepoint ${t}`)),r}catch(s){throw this.session.run(a.raw(`rollback to savepoint ${t}`)),s}}}class c extends i{constructor(s,t,e,r,i){super(),this.stmt=s,this.queryString=t,this.params=e,this.logger=r,this.fields=i}run(s){const t=l(this.params,s??{});return this.logger.logQuery(this.queryString,t),this.stmt.run(...t)}all(s){const{fields:t,queryString:e,logger:r,joinsNotNullableMap:i,stmt:n}=this;if(t)return this.values(s).map((s=>h(t,s,i)));const o=l(this.params,s??{});return r.logQuery(e,o),n.all(...o)}get(s){const t=l(this.params,s??{});this.logger.logQuery(this.queryString,t);const e=this.stmt.get(...t);if(!e)return;const{fields:r,joinsNotNullableMap:i}=this;return r?h(r,e,i):e}values(s){const t=l(this.params,s??{});return this.logger.logQuery(this.queryString,t),this.stmt.values(...t)}}function m(s,e={}){const r=new o;let i;!0===e.logger?i=new t:!1!==e.logger&&(i=e.logger);const a=new u(s,r,{logger:i});return new n(r,a)}export{c as PreparedQuery,u as SQLiteBunSession,g as SQLiteBunTransaction,m as drizzle};
//# sourceMappingURL=index.mjs.map
