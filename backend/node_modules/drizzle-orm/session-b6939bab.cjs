"use strict";var e,t,s=require("./utils-9d882195.cjs"),i=require("./index-59b7992d.cjs"),r=require("./query-builder-2f2e8229.cjs");const n=Symbol("InlineForeignKeys"),l=Symbol("ExtraConfigBuilder");class o extends i.Table{constructor(){super(...arguments),this[e]=[],this[t]=void 0}}function a(e,t,s,r,l=e){const a=new o(e,r,l),c=Object.fromEntries(Object.entries(t).map((([e,t])=>{const s=t.build(a);return a[n].push(...t.buildForeignKeys(s,a)),[e,s]}))),h=Object.assign(a,c);return h[i.Table.Symbol.Columns]=c,s&&(h[o.Symbol.ExtraConfigBuilder]=s),h}i.Table.Symbol.Columns,e=n,t=l,o.Symbol=Object.assign({},i.Table.Symbol,{InlineForeignKeys:n,ExtraConfigBuilder:l});const c=(e,t,s)=>a(e,t,s);class h{constructor(e,t,s){this.table=e,this.session=t,this.dialect=s,this.run=e=>this.prepare(!0).run(e),this.all=e=>this.prepare(!0).all(e),this.get=e=>this.prepare(!0).get(e),this.values=e=>this.prepare(!0).values(e),this.config={table:e}}where(e){return this.config.where=e,this}returning(e=this.table[o.Symbol.Columns]){return this.config.returning=s.orderSelectedFields(e),this}getSQL(){return this.dialect.buildDeleteQuery(this.config)}toSQL(){const{typings:e,...t}=this.dialect.sqlToQuery(this.getSQL());return t}prepare(e){return this.session[e?"prepareOneTimeQuery":"prepareQuery"](this.dialect.sqlToQuery(this.getSQL()),this.config.returning)}}class u{constructor(e,t,s){this.table=e,this.session=t,this.dialect=s}values(e){if(0===(e=Array.isArray(e)?e:[e]).length)throw new Error("values() must be called with at least one value");const t=e.map((e=>{const t={},s=this.table[i.Table.Symbol.Columns];for(const r of Object.keys(e)){const n=e[r];t[r]=n instanceof i.SQL?n:new i.Param(n,s[r])}return t}));return new d(this.table,t,this.session,this.dialect)}}class d{constructor(e,t,s,i){this.session=s,this.dialect=i,this.run=e=>this.prepare(!0).run(e),this.all=e=>this.prepare(!0).all(e),this.get=e=>this.prepare(!0).get(e),this.values=e=>this.prepare(!0).values(e),this.config={table:e,values:t}}returning(e=this.config.table[o.Symbol.Columns]){return this.config.returning=s.orderSelectedFields(e),this}onConflictDoNothing(e={}){if(void 0===e.target)this.config.onConflict=i.sql`do nothing`;else{const t=e.where?i.sql` where ${e.where}`:i.sql``;this.config.onConflict=i.sql`(${e.target})${t} do nothing`}return this}onConflictDoUpdate(e){const t=e.where?i.sql` where ${e.where}`:i.sql``,r=this.dialect.buildUpdateSet(this.config.table,s.mapUpdateSet(this.config.table,e.set));return this.config.onConflict=i.sql`(${e.target})${t} do update set ${r}`,this}getSQL(){return this.dialect.buildInsertQuery(this.config)}toSQL(){const{typings:e,...t}=this.dialect.sqlToQuery(this.getSQL());return t}prepare(e){return this.session[e?"prepareOneTimeQuery":"prepareQuery"](this.dialect.sqlToQuery(this.getSQL()),this.config.returning)}}class f{constructor(e){this.name=e,this.config={}}}class p extends f{as(e){"function"==typeof e&&(e=e(new $));const t=new i.SelectionProxyHandler({alias:this.name,sqlBehavior:"error",sqlAliasedBehavior:"alias",replaceOriginalName:!0}),s=e.getSelectedFields();return new Proxy(new b({sqliteConfig:this.config,config:{name:this.name,schema:void 0,selectedFields:s,query:e.getSQL().inlineParams()}}),t)}}class g extends f{constructor(e,t){super(e),this.columns=s.getTableColumns(c(e,t))}existing(){return new Proxy(new b({sqliteConfig:void 0,config:{name:this.name,schema:void 0,selectedFields:this.columns,query:void 0}}),new i.SelectionProxyHandler({alias:this.name,sqlBehavior:"error",sqlAliasedBehavior:"alias",replaceOriginalName:!0}))}as(e){return new Proxy(new b({sqliteConfig:this.config,config:{name:this.name,schema:void 0,selectedFields:this.columns,query:e.inlineParams()}}),new i.SelectionProxyHandler({alias:this.name,sqlBehavior:"error",sqlAliasedBehavior:"alias",replaceOriginalName:!0}))}}class y extends i.View{}const m=Symbol("SQLiteViewConfig");class b extends y{constructor({sqliteConfig:e,config:t}){super(t),this[m]=e}}function S(e,t){return t?new g(e,t):new p(e)}const q=S;class w{escapeName(e){return`"${e}"`}escapeParam(e){return"?"}escapeString(e){return`'${e.replace(/'/g,"''")}'`}buildDeleteQuery({table:e,where:t,returning:s}){const r=s?i.sql` returning ${this.buildSelection(s,{isSingleTable:!0})}`:void 0,n=t?i.sql` where ${t}`:void 0;return i.sql`delete from ${e}${n}${r}`}buildUpdateSet(e,t){const s=Object.entries(t),r=s.length;return i.sql.fromList(s.flatMap((([t,s],n)=>{const l=e[i.Table.Symbol.Columns][t],o=i.sql`${i.name(l.name)} = ${s}`;return n<r-1?[o,i.sql.raw(", ")]:[o]})))}buildUpdateQuery({table:e,set:t,where:s,returning:r}){const n=this.buildUpdateSet(e,t),l=r?i.sql` returning ${this.buildSelection(r,{isSingleTable:!0})}`:void 0,o=s?i.sql` where ${s}`:void 0;return i.sql`update ${e} set ${n}${o}${l}`}buildSelection(e,{isSingleTable:t=!1}={}){const s=e.length,r=e.flatMap((({field:e},r)=>{const n=[];if(e instanceof i.SQL.Aliased&&e.isSelectionField)n.push(i.name(e.fieldAlias));else if(e instanceof i.SQL.Aliased||e instanceof i.SQL){const s=e instanceof i.SQL.Aliased?e.sql:e;t?n.push(new i.SQL(s.queryChunks.map((e=>e instanceof i.Column?i.name(e.name):e)))):n.push(s),e instanceof i.SQL.Aliased&&n.push(i.sql` as ${i.name(e.fieldAlias)}`)}else if(e instanceof i.Column){const s=e.table[i.Table.Symbol.Name],r=e.name;t?n.push(i.name(r)):n.push(i.sql`${i.name(s)}.${i.name(r)}`)}return r<s-1&&n.push(i.sql`, `),n}));return i.sql.fromList(r)}buildSelectQuery({withList:e,fields:t,where:r,having:n,table:l,joins:a,orderBy:c,groupBy:h,limit:u,offset:d}){const f=s.orderSelectedFields(t);for(const e of f)if(e.field instanceof i.Column&&i.getTableName(e.field.table)!==(l instanceof i.Subquery?l[i.SubqueryConfig].alias:l instanceof y?l[i.ViewBaseConfig].name:l instanceof i.SQL?void 0:i.getTableName(l))&&!(e=>a.some((({alias:t})=>t===i.getTableName(e))))(e.field.table)){const t=i.getTableName(e.field.table);throw new Error(`Your "${e.path.join("->")}" field references a column "${t}"."${e.field.name}", but the table "${t}" is not part of the query! Did you forget to join it?`)}const p=0===a.length;let g;if(e.length){const t=[i.sql`with `];for(const[s,r]of e.entries())t.push(i.sql`${i.name(r[i.SubqueryConfig].alias)} as (${r[i.SubqueryConfig].sql})`),s<e.length-1&&t.push(i.sql`, `);t.push(i.sql` `),g=i.sql.fromList(t)}const m=this.buildSelection(f,{isSingleTable:p}),b=l instanceof i.Table&&l[i.Table.Symbol.OriginalName]!==l[i.Table.Symbol.Name]?i.sql`${i.name(l[i.Table.Symbol.OriginalName])} ${i.name(l[i.Table.Symbol.Name])}`:l,S=[];for(const[e,t]of a.entries()){0===e&&S.push(i.sql` `);const s=t.table;if(s instanceof o){const e=s[o.Symbol.Name],r=s[o.Symbol.Schema],n=s[o.Symbol.OriginalName],l=e===n?void 0:t.alias;S.push(i.sql`${i.sql.raw(t.joinType)} join ${r?i.sql`${i.name(r)}.`:void 0}${i.name(n)}${l&&i.sql` ${i.name(l)}`} on ${t.on}`)}else S.push(i.sql`${i.sql.raw(t.joinType)} join ${s} on ${t.on}`);e<a.length-1&&S.push(i.sql` `)}const q=i.sql.fromList(S),w=r?i.sql` where ${r}`:void 0,Q=n?i.sql` having ${n}`:void 0,v=[];for(const[e,t]of c.entries())v.push(t),e<c.length-1&&v.push(i.sql`, `);const L=[];for(const[e,t]of h.entries())L.push(t),e<h.length-1&&L.push(i.sql`, `);const T=L.length>0?i.sql` group by ${i.sql.fromList(L)}`:void 0,$=v.length>0?i.sql` order by ${i.sql.fromList(v)}`:void 0,x=u?i.sql` limit ${u}`:void 0,N=d?i.sql` offset ${d}`:void 0;return i.sql`${g}select ${m} from ${b}${q}${w}${T}${Q}${$}${x}${N}`}buildInsertQuery({table:e,values:t,onConflict:s,returning:r}){const n=1===t.length,l=[],o=e[i.Table.Symbol.Columns],a=n?Object.keys(t[0]).map((e=>[e,o[e]])):Object.entries(o),c=a.map((([,e])=>i.name(e.name)));for(const[e,s]of t.entries()){const r=[];for(const[e,t]of a){const n=s[e];if(void 0===n||n instanceof i.Param&&void 0===n.value){let e;e=null!==t.default&&void 0!==t.default?t.default instanceof i.SQL?t.default:i.param(t.default,t):i.sql`null`,r.push(e)}else r.push(n)}l.push(r),e<t.length-1&&l.push(i.sql`, `)}const h=i.sql.fromList(l),u=r?i.sql` returning ${this.buildSelection(r,{isSingleTable:!0})}`:void 0,d=s?i.sql` on conflict ${s}`:void 0;return i.sql`insert into ${e} ${c} values ${h}${d}${u}`}sqlToQuery(e){return e.toQuery({escapeName:this.escapeName,escapeParam:this.escapeParam,escapeString:this.escapeString})}}class Q extends w{migrate(e,t){const s=i.sql`
			CREATE TABLE IF NOT EXISTS "__drizzle_migrations" (
				id SERIAL PRIMARY KEY,
				hash text NOT NULL,
				created_at numeric
			)
		`;t.run(s);const r=t.values(i.sql`SELECT id, hash, created_at FROM "__drizzle_migrations" ORDER BY created_at DESC LIMIT 1`)[0]??void 0;t.run(i.sql`BEGIN`);try{for(const s of e)if(!r||Number(r[2])<s.folderMillis){for(const e of s.sql)t.run(i.sql.raw(e));t.run(i.sql`INSERT INTO "__drizzle_migrations" ("hash", "created_at") VALUES(${s.hash}, ${s.folderMillis})`)}t.run(i.sql`COMMIT`)}catch(e){throw t.run(i.sql`ROLLBACK`),e}}}class v{constructor(e,t,s,i=[]){this.fields=e,this.session=t,this.dialect=s,this.withList=i}from(e){const t=!!this.fields;let r;return r=this.fields?this.fields:e instanceof i.Subquery?Object.fromEntries(Object.keys(e[i.SubqueryConfig].selection).map((t=>[t,e[t]]))):e instanceof y?e[i.ViewBaseConfig].selectedFields:e instanceof i.SQL?{}:s.getTableColumns(e),new T(e,r,t,this.session,this.dialect,this.withList)}}class L extends r.TypedQueryBuilder{constructor(e,t,i,r,n,l){super(),this.isPartialSelect=i,this.session=r,this.dialect=n,this.leftJoin=this.createJoin("left"),this.rightJoin=this.createJoin("right"),this.innerJoin=this.createJoin("inner"),this.fullJoin=this.createJoin("full"),this.config={withList:l,table:e,fields:{...t},joins:[],orderBy:[],groupBy:[]},this._={selectedFields:t},this.tableName=s.getTableLikeName(e),this.joinsNotNullableMap="string"==typeof this.tableName?{[this.tableName]:!0}:{}}createJoin(e){return(t,r)=>{const n=this.tableName,l=s.getTableLikeName(t);if("string"==typeof l&&this.config.joins.some((e=>e.alias===l)))throw new Error(`Alias "${l}" is already used in this query`);if(!(this.isPartialSelect||(1===Object.keys(this.joinsNotNullableMap).length&&"string"==typeof n&&(this.config.fields={[n]:this.config.fields}),"string"!=typeof l||t instanceof i.SQL))){const e=t instanceof i.Subquery?t[i.SubqueryConfig].selection:t instanceof i.View?t[i.ViewBaseConfig].selectedFields:t[i.Table.Symbol.Columns];this.config.fields[l]=e}if("function"==typeof r&&(r=r(new Proxy(this.config.fields,new i.SelectionProxyHandler({sqlAliasedBehavior:"sql",sqlBehavior:"sql"})))),this.config.joins.push({on:r,table:t,joinType:e,alias:l}),"string"==typeof l)switch(e){case"left":this.joinsNotNullableMap[l]=!1;break;case"right":this.joinsNotNullableMap=Object.fromEntries(Object.entries(this.joinsNotNullableMap).map((([e])=>[e,!1]))),this.joinsNotNullableMap[l]=!0;break;case"inner":this.joinsNotNullableMap[l]=!0;break;case"full":this.joinsNotNullableMap=Object.fromEntries(Object.entries(this.joinsNotNullableMap).map((([e])=>[e,!1]))),this.joinsNotNullableMap[l]=!1}return this}}where(e){return"function"==typeof e&&(e=e(new Proxy(this.config.fields,new i.SelectionProxyHandler({sqlAliasedBehavior:"sql",sqlBehavior:"sql"})))),this.config.where=e,this}having(e){return"function"==typeof e&&(e=e(new Proxy(this.config.fields,new i.SelectionProxyHandler({sqlAliasedBehavior:"sql",sqlBehavior:"sql"})))),this.config.having=e,this}groupBy(...e){if("function"==typeof e[0]){const t=e[0](new Proxy(this.config.fields,new i.SelectionProxyHandler({sqlAliasedBehavior:"alias",sqlBehavior:"sql"})));this.config.groupBy=Array.isArray(t)?t:[t]}else this.config.groupBy=e;return this}orderBy(...e){if("function"==typeof e[0]){const t=e[0](new Proxy(this.config.fields,new i.SelectionProxyHandler({sqlAliasedBehavior:"alias",sqlBehavior:"sql"})));this.config.orderBy=Array.isArray(t)?t:[t]}else this.config.orderBy=e;return this}limit(e){return this.config.limit=e,this}offset(e){return this.config.offset=e,this}getSQL(){return this.dialect.buildSelectQuery(this.config)}toSQL(){const{typings:e,...t}=this.dialect.sqlToQuery(this.getSQL());return t}as(e){return new Proxy(new i.Subquery(this.getSQL(),this.config.fields,e),new i.SelectionProxyHandler({alias:e,sqlAliasedBehavior:"alias",sqlBehavior:"error"}))}getSelectedFields(){return new Proxy(this.config.fields,new i.SelectionProxyHandler({alias:this.tableName,sqlAliasedBehavior:"alias",sqlBehavior:"error"}))}}class T extends L{constructor(){super(...arguments),this.run=e=>this.prepare(!0).run(e),this.all=e=>this.prepare(!0).all(e),this.get=e=>this.prepare(!0).get(e),this.values=e=>this.prepare(!0).values(e)}prepare(e){if(!this.session)throw new Error("Cannot execute a query on a query builder. Please use a database instance instead.");const t=s.orderSelectedFields(this.config.fields),i=this.session[e?"prepareOneTimeQuery":"prepareQuery"](this.dialect.sqlToQuery(this.getSQL()),t);return i.joinsNotNullableMap=this.joinsNotNullableMap,i}}class ${$with(e){const t=this;return{as:s=>("function"==typeof s&&(s=s(t)),new Proxy(new i.WithSubquery(s.getSQL(),s.getSelectedFields(),e,!0),new i.SelectionProxyHandler({alias:e,sqlAliasedBehavior:"alias",sqlBehavior:"error"})))}}with(...e){const t=this;return{select:function(s){return new v(s??void 0,void 0,t.getDialect(),e)}}}select(e){return new v(e??void 0,void 0,this.getDialect())}getDialect(){return this.dialect||(this.dialect=new Q),this.dialect}}class x{constructor(e,t,s){this.table=e,this.session=t,this.dialect=s}set(e){return new N(this.table,s.mapUpdateSet(this.table,e),this.session,this.dialect)}}class N{constructor(e,t,s,i){this.session=s,this.dialect=i,this.run=e=>this.prepare(!0).run(e),this.all=e=>this.prepare(!0).all(e),this.get=e=>this.prepare(!0).get(e),this.values=e=>this.prepare(!0).values(e),this.config={set:t,table:e}}where(e){return this.config.where=e,this}returning(e=this.config.table[o.Symbol.Columns]){return this.config.returning=s.orderSelectedFields(e),this}getSQL(){return this.dialect.buildUpdateQuery(this.config)}toSQL(){const{typings:e,...t}=this.dialect.sqlToQuery(this.getSQL());return t}prepare(e){return this.session[e?"prepareOneTimeQuery":"prepareQuery"](this.dialect.sqlToQuery(this.getSQL()),this.config.returning)}}class B{constructor(e,t){this.dialect=e,this.session=t}$with(e){return{as:t=>("function"==typeof t&&(t=t(new $)),new Proxy(new i.WithSubquery(t.getSQL(),t.getSelectedFields(),e,!0),new i.SelectionProxyHandler({alias:e,sqlAliasedBehavior:"alias",sqlBehavior:"error"})))}}with(...e){const t=this;return{select:function(s){return new v(s??void 0,t.session,t.dialect,e)}}}select(e){return new v(e??void 0,this.session,this.dialect)}update(e){return new x(e,this.session,this.dialect)}insert(e){return new u(e,this.session,this.dialect)}delete(e){return new h(e,this.session,this.dialect)}run(e){return this.session.run(e.getSQL())}all(e){return this.session.all(e.getSQL())}get(e){return this.session.get(e.getSQL())}values(e){return this.session.values(e.getSQL())}transaction(e,t){return this.session.transaction(e,t)}}exports.BaseSQLiteDatabase=B,exports.ExtraConfigBuilder=l,exports.InlineForeignKeys=n,exports.ManualViewBuilder=g,exports.PreparedQuery=class{},exports.QueryBuilder=$,exports.SQLiteAsyncDialect=class extends w{async migrate(e,t){const s=i.sql`
			CREATE TABLE IF NOT EXISTS "__drizzle_migrations" (
				id SERIAL PRIMARY KEY,
				hash text NOT NULL,
				created_at numeric
			)
		`;await t.run(s);const r=(await t.values(i.sql`SELECT id, hash, created_at FROM "__drizzle_migrations" ORDER BY created_at DESC LIMIT 1`))[0]??void 0;await t.transaction((async t=>{for(const s of e)if(!r||Number(r[2])<s.folderMillis){for(const e of s.sql)await t.run(i.sql.raw(e));await t.run(i.sql`INSERT INTO "__drizzle_migrations" ("hash", "created_at") VALUES(${s.hash}, ${s.folderMillis})`)}}))}},exports.SQLiteDelete=h,exports.SQLiteDialect=w,exports.SQLiteInsert=d,exports.SQLiteInsertBuilder=u,exports.SQLiteSelect=T,exports.SQLiteSelectBuilder=v,exports.SQLiteSelectQueryBuilder=L,exports.SQLiteSession=class{constructor(e){this.dialect=e}prepareOneTimeQuery(e,t){return this.prepareQuery(e,t)}run(e){const t=this.dialect.sqlToQuery(e);try{return this.prepareOneTimeQuery(t,void 0).run()}catch(e){throw s.DrizzleError.wrap(e,`Failed to run the query '${t.sql}'`)}}all(e){return this.prepareOneTimeQuery(this.dialect.sqlToQuery(e),void 0).all()}get(e){return this.prepareOneTimeQuery(this.dialect.sqlToQuery(e),void 0).get()}values(e){return this.prepareOneTimeQuery(this.dialect.sqlToQuery(e),void 0).values()}},exports.SQLiteSyncDialect=Q,exports.SQLiteTable=o,exports.SQLiteTransaction=class extends B{constructor(e,t,s=0){super(e,t),this.nestedIndex=s}rollback(){throw new s.TransactionRollbackError}},exports.SQLiteUpdate=N,exports.SQLiteUpdateBuilder=x,exports.SQLiteView=b,exports.SQLiteViewBase=y,exports.SQLiteViewConfig=m,exports.ViewBuilder=p,exports.ViewBuilderCore=f,exports.sqliteTable=c,exports.sqliteTableCreator=function(e){return(t,s,i)=>a(e(t),s,i,void 0,t)},exports.sqliteView=S,exports.view=q;
//# sourceMappingURL=session-b6939bab.cjs.map
