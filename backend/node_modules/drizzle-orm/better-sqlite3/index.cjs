"use strict";var e=require("../logger-04bad527.cjs"),s=require("../session-b6939bab.cjs"),t=require("../index-59b7992d.cjs"),r=require("../utils-9d882195.cjs");require("../query-builder-2f2e8229.cjs");class i extends s.SQLiteSession{constructor(s,t,r={}){super(t),this.client=s,this.logger=r.logger??new e.NoopLogger}prepareQuery(e,s){const t=this.client.prepare(e.sql);return new l(t,e.sql,e.params,this.logger,s)}transaction(e,s={}){const t=new n(this.dialect,this);return this.client.transaction(e)[s.behavior??"deferred"](t)}}class n extends s.SQLiteTransaction{transaction(e){const s=`sp${this.nestedIndex}`,r=new n(this.dialect,this.session,this.nestedIndex+1);this.session.run(t.sql.raw(`savepoint ${s}`));try{const i=e(r);return this.session.run(t.sql.raw(`release savepoint ${s}`)),i}catch(e){throw this.session.run(t.sql.raw(`rollback to savepoint ${s}`)),e}}}class l extends s.PreparedQuery{constructor(e,s,t,r,i){super(),this.stmt=e,this.queryString=s,this.params=t,this.logger=r,this.fields=i}run(e){const s=t.fillPlaceholders(this.params,e??{});return this.logger.logQuery(this.queryString,s),this.stmt.run(...s)}all(e){const{fields:s,joinsNotNullableMap:i,queryString:n,logger:l,stmt:o}=this;if(s)return this.values(e).map((e=>r.mapResultRow(s,e,i)));const a=t.fillPlaceholders(this.params,e??{});return l.logQuery(n,a),o.all(...a)}get(e){const s=t.fillPlaceholders(this.params,e??{});this.logger.logQuery(this.queryString,s);const{fields:i,stmt:n,joinsNotNullableMap:l}=this;if(!i)return n.get(...s);const o=n.raw().get(...s);return o?r.mapResultRow(i,o,l):void 0}values(e){const s=t.fillPlaceholders(this.params,e??{});return this.logger.logQuery(this.queryString,s),this.stmt.raw().all(...s)}}exports.BetterSQLiteSession=i,exports.BetterSQLiteTransaction=n,exports.PreparedQuery=l,exports.drizzle=function(t,r={}){const n=new s.SQLiteSyncDialect;let l;!0===r.logger?l=new e.DefaultLogger:!1!==r.logger&&(l=r.logger);const o=new i(t,n,{logger:l});return new s.BaseSQLiteDatabase(n,o)};
//# sourceMappingURL=index.cjs.map
