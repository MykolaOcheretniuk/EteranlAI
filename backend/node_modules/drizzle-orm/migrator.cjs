"use strict";var e=require("node:crypto"),r=require("node:fs"),t=require("node:path");exports.readMigrationFiles=function(o){let n;if("string"==typeof o){const e=r.readFileSync(t.resolve(".",o),"utf8");n=JSON.parse(e).out}else n=o.migrationsFolder;if(!n)throw new Error("no migration folder defined");const s=[],i=`${n}/meta/_journal.json`;if(!r.existsSync(i))throw new Error("Can't find meta/_journal.json file");const a=r.readFileSync(`${n}/meta/_journal.json`).toString(),l=JSON.parse(a);for(const t of l.entries){const o=`${n}/${t.tag}.sql`;try{const o=r.readFileSync(`${n}/${t.tag}.sql`).toString(),i=o.split("--\x3e statement-breakpoint").map((e=>e));s.push({sql:i,bps:t.breakpoints,folderMillis:t.when,hash:e.createHash("sha256").update(o).digest("hex")})}catch{throw new Error(`No file ${o} found in ${n} folder`)}}return s};
//# sourceMappingURL=migrator.cjs.map
