"use strict";var e,t,s=require("./utils-9d882195.cjs"),i=require("./index-59b7992d.cjs"),n=require("./query-promise-2c5b43ab.cjs"),r=require("./column-builder-b48639f3.cjs"),o=require("./query-builder-2f2e8229.cjs");const l=Symbol("InlineForeignKeys"),a=Symbol("ExtraConfigBuilder");class c extends i.Table{constructor(){super(...arguments),this[e]=[],this[t]=void 0}}function u(e,t,s,n,r=e){const o=new c(e,n,r),a=Object.fromEntries(Object.entries(t).map((([e,t])=>{const s=t.build(o);return o[l].push(...t.buildForeignKeys(s,o)),[e,s]}))),u=Object.assign(o,a);return u[i.Table.Symbol.Columns]=a,s&&(u[c.Symbol.ExtraConfigBuilder]=s),u}i.Table.Symbol.Columns,e=l,t=a,c.Symbol=Object.assign({},i.Table.Symbol,{InlineForeignKeys:l,ExtraConfigBuilder:a});const h=(e,t,s)=>u(e,t,s,void 0,e);class d{constructor(e,t){this.reference=()=>{const{columns:t,foreignColumns:s}=e();return{columns:t,foreignTable:s[0].table,foreignColumns:s}},t&&(this._onUpdate=t.onUpdate,this._onDelete=t.onDelete)}onUpdate(e){return this._onUpdate=e,this}onDelete(e){return this._onDelete=e,this}build(e){return new f(e,this)}}class f{constructor(e,t){this.table=e,this.reference=t.reference,this.onUpdate=t._onUpdate,this.onDelete=t._onDelete}getName(){const{columns:e,foreignColumns:t}=this.reference(),s=e.map((e=>e.name)),i=t.map((e=>e.name));return`${[this.table[c.Symbol.Name],...s,t[0].table[c.Symbol.Name],...i].join("_")}_fk`}}class p extends r.ColumnBuilder{constructor(){super(...arguments),this.foreignKeyConfigs=[]}references(e,t={}){return this.foreignKeyConfigs.push({ref:e,actions:t}),this}buildForeignKeys(e,t){return this.foreignKeyConfigs.map((({ref:s,actions:i})=>((s,i)=>{const n=new d((()=>{const t=s();return{columns:[e],foreignColumns:[t]}}));return i.onUpdate&&n.onUpdate(i.onUpdate),i.onDelete&&n.onDelete(i.onDelete),n.build(t)})(s,i)))}}class g extends i.Column{}class y extends n.QueryPromise{constructor(e,t,s){super(),this.table=e,this.session=t,this.dialect=s,this.execute=e=>this.prepare().execute(e),this.createIterator=()=>{const e=this;return async function*(t){yield*e.prepare().iterator(t)}},this.iterator=this.createIterator(),this.config={table:e}}where(e){return this.config.where=e,this}getSQL(){return this.dialect.buildDeleteQuery(this.config)}toSQL(){const{typings:e,...t}=this.dialect.sqlToQuery(this.getSQL());return t}prepare(){return this.session.prepareQuery(this.dialect.sqlToQuery(this.getSQL()),this.config.returning)}}class m{constructor(e,t,s){this.table=e,this.session=t,this.dialect=s,this.shouldIgnore=!1}ignore(){return this.shouldIgnore=!0,this}values(e){if(0===(e=Array.isArray(e)?e:[e]).length)throw new Error("values() must be called with at least one value");const t=e.map((e=>{const t={},s=this.table[i.Table.Symbol.Columns];for(const n of Object.keys(e)){const r=e[n];t[n]=r instanceof i.SQL?r:new i.Param(r,s[n])}return t}));return new q(this.table,t,this.shouldIgnore,this.session,this.dialect)}}class q extends n.QueryPromise{constructor(e,t,s,i,n){super(),this.session=i,this.dialect=n,this.execute=e=>this.prepare().execute(e),this.createIterator=()=>{const e=this;return async function*(t){yield*e.prepare().iterator(t)}},this.iterator=this.createIterator(),this.config={table:e,values:t,ignore:s}}onDuplicateKeyUpdate(e){const t=this.dialect.buildUpdateSet(this.config.table,s.mapUpdateSet(this.config.table,e.set));return this.config.onConflict=i.sql`update ${t}`,this}getSQL(){return this.dialect.buildInsertQuery(this.config)}toSQL(){const{typings:e,...t}=this.dialect.sqlToQuery(this.getSQL());return t}prepare(){return this.session.prepareQuery(this.dialect.sqlToQuery(this.getSQL()),void 0)}}class b{constructor(e,t){this.name=e,this.schema=t,this.config={}}algorithm(e){return this.config.algorithm=e,this}definer(e){return this.config.definer=e,this}sqlSecurity(e){return this.config.sqlSecurity=e,this}withCheckOption(e){return this.config.withCheckOption=e??"cascaded",this}}class S extends b{as(e){"function"==typeof e&&(e=e(new T));const t=new i.SelectionProxyHandler({alias:this.name,sqlBehavior:"error",sqlAliasedBehavior:"alias",replaceOriginalName:!0}),s=new Proxy(e.getSelectedFields(),t);return new Proxy(new v({mysqlConfig:this.config,config:{name:this.name,schema:this.schema,selectedFields:s,query:e.getSQL().inlineParams()}}),t)}}class w extends b{constructor(e,t,i){super(e,i),this.columns=s.getTableColumns(h(e,t))}existing(){return new Proxy(new v({mysqlConfig:void 0,config:{name:this.name,schema:this.schema,selectedFields:this.columns,query:void 0}}),new i.SelectionProxyHandler({alias:this.name,sqlBehavior:"error",sqlAliasedBehavior:"alias",replaceOriginalName:!0}))}as(e){return new Proxy(new v({mysqlConfig:this.config,config:{name:this.name,schema:this.schema,selectedFields:this.columns,query:e.inlineParams()}}),new i.SelectionProxyHandler({alias:this.name,sqlBehavior:"error",sqlAliasedBehavior:"alias",replaceOriginalName:!0}))}}class x extends i.View{}const $=Symbol("MySqlViewConfig");class v extends x{constructor({mysqlConfig:e,config:t}){super(t),this[$]=e}}function Q(e,t,s){return t?new w(e,t,s):new S(e,s)}class C{async migrate(e,t,s){const n=s.migrationsTable??"__drizzle_migrations",r=i.sql`
			create table if not exists ${i.name(n)} (
				id serial primary key,
				hash text not null,
				created_at bigint
			)
		`;await t.execute(r);const o=(await t.all(i.sql`select id, hash, created_at from ${i.name(n)} order by created_at desc limit 1`))[0];await t.transaction((async t=>{for(const s of e)if(!o||Number(o.created_at)<s.folderMillis){for(const e of s.sql)await t.execute(i.sql.raw(e));await t.execute(i.sql`insert into ${i.name(n)} (\`hash\`, \`created_at\`) values(${s.hash}, ${s.folderMillis})`)}}))}escapeName(e){return`\`${e}\``}escapeParam(e){return"?"}escapeString(e){return`'${e.replace(/'/g,"''")}'`}buildDeleteQuery({table:e,where:t,returning:s}){const n=s?i.sql` returning ${this.buildSelection(s,{isSingleTable:!0})}`:void 0,r=t?i.sql` where ${t}`:void 0;return i.sql`delete from ${e}${r}${n}`}buildUpdateSet(e,t){const s=Object.entries(t),n=s.length;return i.sql.fromList(s.flatMap((([t,s],r)=>{const o=e[i.Table.Symbol.Columns][t],l=i.sql`${i.name(o.name)} = ${s}`;return r<n-1?[l,i.sql.raw(", ")]:[l]})))}buildUpdateQuery({table:e,set:t,where:s,returning:n}){const r=this.buildUpdateSet(e,t),o=n?i.sql` returning ${this.buildSelection(n,{isSingleTable:!0})}`:void 0,l=s?i.sql` where ${s}`:void 0;return i.sql`update ${e} set ${r}${l}${o}`}buildSelection(e,{isSingleTable:t=!1}={}){const s=e.length,n=e.flatMap((({field:e},n)=>{const r=[];if(e instanceof i.SQL.Aliased&&e.isSelectionField)r.push(i.name(e.fieldAlias));else if(e instanceof i.SQL.Aliased||e instanceof i.SQL){const s=e instanceof i.SQL.Aliased?e.sql:e;t?r.push(new i.SQL(s.queryChunks.map((e=>e instanceof g?i.name(e.name):e)))):r.push(s),e instanceof i.SQL.Aliased&&r.push(i.sql` as ${i.name(e.fieldAlias)}`)}else e instanceof i.Column&&(t?r.push(i.name(e.name)):r.push(e));return n<s-1&&r.push(i.sql`, `),r}));return i.sql.fromList(n)}buildSelectQuery({withList:e,fields:t,where:n,having:r,table:o,joins:l,orderBy:a,groupBy:u,limit:h,offset:d,lockingClause:f}){const p=s.orderSelectedFields(t);for(const e of p)if(e.field instanceof i.Column&&i.getTableName(e.field.table)!==(o instanceof i.Subquery?o[i.SubqueryConfig].alias:o instanceof x?o[i.ViewBaseConfig].name:o instanceof i.SQL?void 0:i.getTableName(o))&&!(e=>l.some((({alias:t})=>t===i.getTableName(e))))(e.field.table)){const t=i.getTableName(e.field.table);throw new Error(`Your "${e.path.join("->")}" field references a column "${t}"."${e.field.name}", but the table "${t}" is not part of the query! Did you forget to join it?`)}const g=0===l.length;let y;if(e.length){const t=[i.sql`with `];for(const[s,n]of e.entries())t.push(i.sql`${i.name(n[i.SubqueryConfig].alias)} as (${n[i.SubqueryConfig].sql})`),s<e.length-1&&t.push(i.sql`, `);t.push(i.sql` `),y=i.sql.fromList(t)}const m=this.buildSelection(p,{isSingleTable:g}),q=o instanceof i.Table&&o[i.Table.Symbol.OriginalName]!==o[i.Table.Symbol.Name]?i.sql`${i.name(o[i.Table.Symbol.OriginalName])} ${i.name(o[i.Table.Symbol.Name])}`:o,b=[];for(const[e,t]of l.entries()){0===e&&b.push(i.sql` `);const s=t.table;if(s instanceof c){const e=s[c.Symbol.Name],n=s[c.Symbol.Schema],r=s[c.Symbol.OriginalName],o=e===r?void 0:t.alias;b.push(i.sql`${i.sql.raw(t.joinType)} join ${n?i.sql`${i.name(n)}.`:void 0}${i.name(r)}${o&&i.sql` ${i.name(o)}`} on ${t.on}`)}else if(s instanceof i.View){const e=s[i.ViewBaseConfig].name,n=s[i.ViewBaseConfig].schema,r=s[i.ViewBaseConfig].originalName,o=e===r?void 0:t.alias;b.push(i.sql`${i.sql.raw(t.joinType)} join ${n?i.sql`${i.name(n)}.`:void 0}${i.name(r)}${o&&i.sql` ${i.name(o)}`} on ${t.on}`)}else b.push(i.sql`${i.sql.raw(t.joinType)} join ${s} on ${t.on}`);e<l.length-1&&b.push(i.sql` `)}const S=i.sql.fromList(b),w=n?i.sql` where ${n}`:void 0,$=r?i.sql` having ${r}`:void 0,v=[];for(const[e,t]of a.entries())v.push(t),e<a.length-1&&v.push(i.sql`, `);const Q=v.length>0?i.sql` order by ${i.sql.fromList(v)}`:void 0,C=[];for(const[e,t]of u.entries())C.push(t),e<u.length-1&&C.push(i.sql`, `);const B=C.length>0?i.sql` group by ${i.sql.fromList(C)}`:void 0,L=h?i.sql` limit ${h}`:void 0,N=d?i.sql` offset ${d}`:void 0;let T;if(f){const{config:e,strength:t}=f;T=i.sql` for ${i.sql.raw(t)}`,e.noWait?T.append(i.sql` no wait`):e.skipLocked&&T.append(i.sql` skip locked`)}return i.sql`${y}select ${m} from ${q}${S}${w}${B}${$}${Q}${L}${N}${T}`}buildInsertQuery({table:e,values:t,ignore:s,onConflict:n}){const r=1===t.length,o=[],l=e[i.Table.Symbol.Columns],a=r?Object.keys(t[0]).map((e=>[e,l[e]])):Object.entries(l),c=a.map((([,e])=>i.name(e.name)));for(const[e,s]of t.entries()){const n=[];for(const[e]of a){const t=s[e];void 0===t||t instanceof i.Param&&void 0===t.value?n.push(i.sql`default`):n.push(t)}o.push(n),e<t.length-1&&o.push(i.sql`, `)}const u=i.sql.fromList(o),h=s?i.sql` ignore`:void 0,d=n?i.sql` on duplicate key ${n}`:void 0;return i.sql`insert${h} into ${e} ${c} values ${u}${d}`}sqlToQuery(e){return e.toQuery({escapeName:this.escapeName,escapeParam:this.escapeParam,escapeString:this.escapeString})}}class B{constructor(e,t,s,i=[]){this.fields=e,this.session=t,this.dialect=s,this.withList=i}from(e){const t=!!this.fields;let n;return n=this.fields?this.fields:e instanceof i.Subquery?Object.fromEntries(Object.keys(e[i.SubqueryConfig].selection).map((t=>[t,e[t]]))):e instanceof x?e[i.ViewBaseConfig].selectedFields:e instanceof i.SQL?{}:s.getTableColumns(e),new N(e,n,t,this.session,this.dialect,this.withList)}}class L extends o.TypedQueryBuilder{constructor(e,t,i,n,r,o){super(),this.isPartialSelect=i,this.session=n,this.dialect=r,this.leftJoin=this.createJoin("left"),this.rightJoin=this.createJoin("right"),this.innerJoin=this.createJoin("inner"),this.fullJoin=this.createJoin("full"),this.config={withList:o,table:e,fields:{...t},joins:[],orderBy:[],groupBy:[]},this._={selectedFields:t},this.tableName=s.getTableLikeName(e),this.joinsNotNullableMap="string"==typeof this.tableName?{[this.tableName]:!0}:{}}createJoin(e){return(t,n)=>{const r=this.tableName,o=s.getTableLikeName(t);if("string"==typeof o&&this.config.joins.some((e=>e.alias===o)))throw new Error(`Alias "${o}" is already used in this query`);if(!(this.isPartialSelect||(1===Object.keys(this.joinsNotNullableMap).length&&"string"==typeof r&&(this.config.fields={[r]:this.config.fields}),"string"!=typeof o||t instanceof i.SQL))){const e=t instanceof i.Subquery?t[i.SubqueryConfig].selection:t instanceof i.View?t[i.ViewBaseConfig].selectedFields:t[i.Table.Symbol.Columns];this.config.fields[o]=e}if("function"==typeof n&&(n=n(new Proxy(this.config.fields,new i.SelectionProxyHandler({sqlAliasedBehavior:"sql",sqlBehavior:"sql"})))),this.config.joins.push({on:n,table:t,joinType:e,alias:o}),"string"==typeof o)switch(e){case"left":this.joinsNotNullableMap[o]=!1;break;case"right":this.joinsNotNullableMap=Object.fromEntries(Object.entries(this.joinsNotNullableMap).map((([e])=>[e,!1]))),this.joinsNotNullableMap[o]=!0;break;case"inner":this.joinsNotNullableMap[o]=!0;break;case"full":this.joinsNotNullableMap=Object.fromEntries(Object.entries(this.joinsNotNullableMap).map((([e])=>[e,!1]))),this.joinsNotNullableMap[o]=!1}return this}}where(e){return"function"==typeof e&&(e=e(new Proxy(this.config.fields,new i.SelectionProxyHandler({sqlAliasedBehavior:"sql",sqlBehavior:"sql"})))),this.config.where=e,this}having(e){return"function"==typeof e&&(e=e(new Proxy(this.config.fields,new i.SelectionProxyHandler({sqlAliasedBehavior:"sql",sqlBehavior:"sql"})))),this.config.having=e,this}groupBy(...e){if("function"==typeof e[0]){const t=e[0](new Proxy(this.config.fields,new i.SelectionProxyHandler({sqlAliasedBehavior:"alias",sqlBehavior:"sql"})));this.config.groupBy=Array.isArray(t)?t:[t]}else this.config.groupBy=e;return this}orderBy(...e){if("function"==typeof e[0]){const t=e[0](new Proxy(this.config.fields,new i.SelectionProxyHandler({sqlAliasedBehavior:"alias",sqlBehavior:"sql"})));this.config.orderBy=Array.isArray(t)?t:[t]}else this.config.orderBy=e;return this}limit(e){return this.config.limit=e,this}offset(e){return this.config.offset=e,this}for(e,t={}){return this.config.lockingClause={strength:e,config:t},this}getSQL(){return this.dialect.buildSelectQuery(this.config)}toSQL(){const{typings:e,...t}=this.dialect.sqlToQuery(this.getSQL());return t}as(e){return new Proxy(new i.Subquery(this.getSQL(),this.config.fields,e),new i.SelectionProxyHandler({alias:e,sqlAliasedBehavior:"alias",sqlBehavior:"error"}))}}class N extends L{constructor(){super(...arguments),this.execute=e=>this.prepare().execute(e),this.createIterator=()=>{const e=this;return async function*(t){yield*e.prepare().iterator(t)}},this.iterator=this.createIterator()}prepare(){if(!this.session)throw new Error("Cannot execute a query on a query builder. Please use a database instance instead.");const e=s.orderSelectedFields(this.config.fields),t=this.session.prepareQuery(this.dialect.sqlToQuery(this.getSQL()),e);return t.joinsNotNullableMap=this.joinsNotNullableMap,t}}s.applyMixins(N,[n.QueryPromise]);class T{$with(e){const t=this;return{as:s=>("function"==typeof s&&(s=s(t)),new Proxy(new i.WithSubquery(s.getSQL(),s.getSelectedFields(),e,!0),new i.SelectionProxyHandler({alias:e,sqlAliasedBehavior:"alias",sqlBehavior:"error"})))}}with(...e){const t=this;return{select:function(s){return new B(s??void 0,void 0,t.getDialect(),e)}}}select(e){return new B(e??void 0,void 0,this.getDialect())}getDialect(){return this.dialect||(this.dialect=new C),this.dialect}}class j{constructor(e,t,s){this.table=e,this.session=t,this.dialect=s}set(e){return new M(this.table,s.mapUpdateSet(this.table,e),this.session,this.dialect)}}class M extends n.QueryPromise{constructor(e,t,s,i){super(),this.session=s,this.dialect=i,this.execute=e=>this.prepare().execute(e),this.createIterator=()=>{const e=this;return async function*(t){yield*e.prepare().iterator(t)}},this.iterator=this.createIterator(),this.config={set:t,table:e}}where(e){return this.config.where=e,this}getSQL(){return this.dialect.buildUpdateQuery(this.config)}toSQL(){const{typings:e,...t}=this.dialect.sqlToQuery(this.getSQL());return t}prepare(){return this.session.prepareQuery(this.dialect.sqlToQuery(this.getSQL()),this.config.returning)}}class P{constructor(e,t){this.dialect=e,this.session=t}$with(e){return{as:t=>("function"==typeof t&&(t=t(new T)),new Proxy(new i.WithSubquery(t.getSQL(),t.getSelectedFields(),e,!0),new i.SelectionProxyHandler({alias:e,sqlAliasedBehavior:"alias",sqlBehavior:"error"})))}}with(...e){const t=this;return{select:function(s){return new B(s??void 0,t.session,t.dialect,e)}}}select(e){return new B(e??void 0,this.session,this.dialect)}update(e){return new j(e,this.session,this.dialect)}insert(e){return new m(e,this.session,this.dialect)}delete(e){return new y(e,this.session,this.dialect)}execute(e){return this.session.execute(e.getSQL())}transaction(e,t){return this.session.transaction(e,t)}}exports.ExtraConfigBuilder=a,exports.ForeignKey=f,exports.ForeignKeyBuilder=d,exports.InlineForeignKeys=l,exports.ManualViewBuilder=w,exports.MySqlColumn=g,exports.MySqlColumnBuilder=p,exports.MySqlColumnBuilderWithAutoIncrement=class extends p{constructor(e){super(e),this.config.autoIncrement=!1}autoincrement(){return this.config.autoIncrement=!0,this}},exports.MySqlColumnWithAutoIncrement=class extends g{constructor(){super(...arguments),this.autoIncrement=this.config.autoIncrement}},exports.MySqlDatabase=P,exports.MySqlDelete=y,exports.MySqlDialect=C,exports.MySqlInsert=q,exports.MySqlInsertBuilder=m,exports.MySqlSelect=N,exports.MySqlSelectBuilder=B,exports.MySqlSelectQueryBuilder=L,exports.MySqlSession=class{constructor(e){this.dialect=e}execute(e){return this.prepareQuery(this.dialect.sqlToQuery(e),void 0).execute()}getSetTransactionSQL(e){const t=[];return e.isolationLevel&&t.push(`isolation level ${e.isolationLevel}`),t.length?i.sql.fromList(["set transaction ",t.join(" ")]):void 0}getStartTransactionSQL(e){const t=[];return e.withConsistentSnapshot&&t.push("with consistent snapshot"),e.accessMode&&t.push(e.accessMode),t.length?i.sql.fromList(["start transaction ",t.join(" ")]):void 0}},exports.MySqlTable=c,exports.MySqlTransaction=class extends P{constructor(e,t,s=0){super(e,t),this.nestedIndex=s}rollback(){throw new s.TransactionRollbackError}},exports.MySqlUpdate=M,exports.MySqlUpdateBuilder=j,exports.MySqlView=v,exports.MySqlViewBase=x,exports.MySqlViewConfig=$,exports.PreparedQuery=class{},exports.QueryBuilder=T,exports.ViewBuilder=S,exports.ViewBuilderCore=b,exports.foreignKey=function(e){return new d((function(){const{columns:t,foreignColumns:s}=e;return{columns:t,foreignColumns:s}}))},exports.mysqlTable=h,exports.mysqlTableCreator=function(e){return(t,s,i)=>u(e(t),s,i,void 0,t)},exports.mysqlTableWithSchema=u,exports.mysqlView=function(e,t){return Q(e,t,void 0)},exports.mysqlViewWithSchema=Q;
//# sourceMappingURL=session-e6db6732.cjs.map
