import { L as Logger } from './logger.d-37185354.js';
import { B as BaseSQLiteDatabase } from './db.d-fde890b4.js';

interface DrizzleConfig {
    logger?: boolean | Logger;
}
interface SqliteRemoteResult<T = unknown> {
    rows?: T[];
}
type SqliteRemoteDatabase = BaseSQLiteDatabase<'async', SqliteRemoteResult>;
type AsyncRemoteCallback = (sql: string, params: any[], method: 'run' | 'all' | 'values' | 'get') => Promise<{
    rows: any[];
}>;
type RemoteCallback = AsyncRemoteCallback;
declare function drizzle(callback: RemoteCallback, config?: DrizzleConfig): SqliteRemoteDatabase;

export { AsyncRemoteCallback as A, DrizzleConfig as D, RemoteCallback as R, SqliteRemoteResult as S, SqliteRemoteDatabase as a, drizzle as d };
