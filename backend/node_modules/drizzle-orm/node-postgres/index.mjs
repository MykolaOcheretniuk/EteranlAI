import t from"pg";import{N as e,D as s}from"../logger-2598bf05.mjs";import{P as r,a as i,b as n,d as a,c as o}from"../session-c891400d.mjs";import{k as c,s as l}from"../index-b71998f1.mjs";import{m as u}from"../utils-e6870670.mjs";import"../query-promise-a65edd44.mjs";import"../query-builder-2fcde2f0.mjs";import"../column-builder-592f0191.mjs";const{Pool:h}=t;class g extends r{constructor(t,e,s,r,i,n){super(),this.client=t,this.params=s,this.logger=r,this.fields=i,this.rawQuery={name:n,text:e},this.query={name:n,text:e,rowMode:"array"}}execute(t={}){const e=c(this.params,t);this.logger.logQuery(this.rawQuery.text,e);const{fields:s,rawQuery:r,client:i,query:n,joinsNotNullableMap:a}=this;if(!s)return i.query(r,e);return i.query(n,e).then((t=>t.rows.map((t=>u(s,t,a)))))}all(t={}){const e=c(this.params,t);return this.logger.logQuery(this.rawQuery.text,e),this.client.query(this.rawQuery,e).then((t=>t.rows))}values(t={}){const e=c(this.params,t);return this.logger.logQuery(this.rawQuery.text,e),this.client.query(this.query,e).then((t=>t.rows))}}class p extends i{constructor(t,s,r={}){super(s),this.client=t,this.options=r,this.logger=r.logger??new e}prepareQuery(t,e,s){return new g(this.client,t.sql,t.params,this.logger,e,s)}async query(t,e){this.logger.logQuery(t,e);return await this.client.query({rowMode:"array",text:t,values:e})}async queryObjects(t,e){return this.client.query(t,e)}async transaction(t,e){const s=this.client instanceof h?new p(await this.client.connect(),this.dialect,this.options):this,r=new y(this.dialect,s);await r.execute(l`begin${e?l` ${r.getTransactionConfigSQL(e)}`:void 0}`);try{const e=await t(r);return await r.execute(l`commit`),e}catch(t){throw await r.execute(l`rollback`),t}finally{this.client instanceof h&&s.client.release()}}}class y extends n{async transaction(t){const e=`sp${this.nestedIndex+1}`,s=new y(this.dialect,this.session,this.nestedIndex+1);await s.execute(l.raw(`savepoint ${e}`));try{const r=await t(s);return await s.execute(l.raw(`release savepoint ${e}`)),r}catch(t){throw await s.execute(l.raw(`rollback to savepoint ${e}`)),t}}}const{types:w}=t;class m{constructor(t,e,s={}){this.client=t,this.dialect=e,this.options=s,this.initMappers()}createSession(){return new p(this.client,this.dialect,{logger:this.options.logger})}initMappers(){w.setTypeParser(w.builtins.TIMESTAMPTZ,(t=>t)),w.setTypeParser(w.builtins.TIMESTAMP,(t=>t)),w.setTypeParser(w.builtins.DATE,(t=>t))}}function d(t,e={}){const r=new o;let i;!0===e.logger?i=new s:!1!==e.logger&&(i=e.logger);const n=new m(t,r,{logger:i}).createSession();return new a(r,n)}export{m as NodePgDriver,g as NodePgPreparedQuery,p as NodePgSession,y as NodePgTransaction,d as drizzle};
//# sourceMappingURL=index.mjs.map
