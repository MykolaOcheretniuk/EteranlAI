import{o as e,a as s,g as t,c as i,T as n,D as r}from"./utils-e6870670.mjs";import{T as a,e as o,P as l,s as h,o as c,V as u,n as d,C as f,u as g,m as p,l as m,v as y,p as b,W as w}from"./index-b71998f1.mjs";import{T as v}from"./query-builder-2fcde2f0.mjs";var S,$;const q=Symbol("InlineForeignKeys"),Q=Symbol("ExtraConfigBuilder");class N extends a{constructor(){super(...arguments),this[S]=[],this[$]=void 0}}function L(e,s,t,i,n=e){const r=new N(e,i,n),o=Object.fromEntries(Object.entries(s).map((([e,s])=>{const t=s.build(r);return r[q].push(...s.buildForeignKeys(t,r)),[e,t]}))),l=Object.assign(r,o);return l[a.Symbol.Columns]=o,t&&(l[N.Symbol.ExtraConfigBuilder]=t),l}a.Symbol.Columns,S=q,$=Q,N.Symbol=Object.assign({},a.Symbol,{InlineForeignKeys:q,ExtraConfigBuilder:Q});const T=(e,s,t)=>L(e,s,t);function B(e){return(s,t,i)=>L(e(s),t,i,void 0,s)}class j{constructor(e,s,t){this.table=e,this.session=s,this.dialect=t,this.run=e=>this.prepare(!0).run(e),this.all=e=>this.prepare(!0).all(e),this.get=e=>this.prepare(!0).get(e),this.values=e=>this.prepare(!0).values(e),this.config={table:e}}where(e){return this.config.where=e,this}returning(s=this.table[N.Symbol.Columns]){return this.config.returning=e(s),this}getSQL(){return this.dialect.buildDeleteQuery(this.config)}toSQL(){const{typings:e,...s}=this.dialect.sqlToQuery(this.getSQL());return s}prepare(e){return this.session[e?"prepareOneTimeQuery":"prepareQuery"](this.dialect.sqlToQuery(this.getSQL()),this.config.returning)}}class O{constructor(e,s,t){this.table=e,this.session=s,this.dialect=t}values(e){if(0===(e=Array.isArray(e)?e:[e]).length)throw new Error("values() must be called with at least one value");const s=e.map((e=>{const s={},t=this.table[a.Symbol.Columns];for(const i of Object.keys(e)){const n=e[i];s[i]=n instanceof o?n:new l(n,t[i])}return s}));return new E(this.table,s,this.session,this.dialect)}}class E{constructor(e,s,t,i){this.session=t,this.dialect=i,this.run=e=>this.prepare(!0).run(e),this.all=e=>this.prepare(!0).all(e),this.get=e=>this.prepare(!0).get(e),this.values=e=>this.prepare(!0).values(e),this.config={table:e,values:s}}returning(s=this.config.table[N.Symbol.Columns]){return this.config.returning=e(s),this}onConflictDoNothing(e={}){if(void 0===e.target)this.config.onConflict=h`do nothing`;else{const s=e.where?h` where ${e.where}`:h``;this.config.onConflict=h`(${e.target})${s} do nothing`}return this}onConflictDoUpdate(e){const t=e.where?h` where ${e.where}`:h``,i=this.dialect.buildUpdateSet(this.config.table,s(this.config.table,e.set));return this.config.onConflict=h`(${e.target})${t} do update set ${i}`,this}getSQL(){return this.dialect.buildInsertQuery(this.config)}toSQL(){const{typings:e,...s}=this.dialect.sqlToQuery(this.getSQL());return s}prepare(e){return this.session[e?"prepareOneTimeQuery":"prepareQuery"](this.dialect.sqlToQuery(this.getSQL()),this.config.returning)}}class A{constructor(e){this.name=e,this.config={}}}class C extends A{as(e){"function"==typeof e&&(e=e(new Y));const s=new c({alias:this.name,sqlBehavior:"error",sqlAliasedBehavior:"alias",replaceOriginalName:!0}),t=e.getSelectedFields();return new Proxy(new I({sqliteConfig:this.config,config:{name:this.name,schema:void 0,selectedFields:t,query:e.getSQL().inlineParams()}}),s)}}class x extends A{constructor(e,s){super(e),this.columns=t(T(e,s))}existing(){return new Proxy(new I({sqliteConfig:void 0,config:{name:this.name,schema:void 0,selectedFields:this.columns,query:void 0}}),new c({alias:this.name,sqlBehavior:"error",sqlAliasedBehavior:"alias",replaceOriginalName:!0}))}as(e){return new Proxy(new I({sqliteConfig:this.config,config:{name:this.name,schema:void 0,selectedFields:this.columns,query:e.inlineParams()}}),new c({alias:this.name,sqlBehavior:"error",sqlAliasedBehavior:"alias",replaceOriginalName:!0}))}}class M extends u{}const _=Symbol("SQLiteViewConfig");class I extends M{constructor({sqliteConfig:e,config:s}){super(s),this[_]=e}}function P(e,s){return s?new x(e,s):new C(e)}const F=P;class R{escapeName(e){return`"${e}"`}escapeParam(e){return"?"}escapeString(e){return`'${e.replace(/'/g,"''")}'`}buildDeleteQuery({table:e,where:s,returning:t}){const i=t?h` returning ${this.buildSelection(t,{isSingleTable:!0})}`:void 0,n=s?h` where ${s}`:void 0;return h`delete from ${e}${n}${i}`}buildUpdateSet(e,s){const t=Object.entries(s),i=t.length;return h.fromList(t.flatMap((([s,t],n)=>{const r=e[a.Symbol.Columns][s],o=h`${d(r.name)} = ${t}`;return n<i-1?[o,h.raw(", ")]:[o]})))}buildUpdateQuery({table:e,set:s,where:t,returning:i}){const n=this.buildUpdateSet(e,s),r=i?h` returning ${this.buildSelection(i,{isSingleTable:!0})}`:void 0,a=t?h` where ${t}`:void 0;return h`update ${e} set ${n}${a}${r}`}buildSelection(e,{isSingleTable:s=!1}={}){const t=e.length,i=e.flatMap((({field:e},i)=>{const n=[];if(e instanceof o.Aliased&&e.isSelectionField)n.push(d(e.fieldAlias));else if(e instanceof o.Aliased||e instanceof o){const t=e instanceof o.Aliased?e.sql:e;s?n.push(new o(t.queryChunks.map((e=>e instanceof f?d(e.name):e)))):n.push(t),e instanceof o.Aliased&&n.push(h` as ${d(e.fieldAlias)}`)}else if(e instanceof f){const t=e.table[a.Symbol.Name],i=e.name;s?n.push(d(i)):n.push(h`${d(t)}.${d(i)}`)}return i<t-1&&n.push(h`, `),n}));return h.fromList(i)}buildSelectQuery({withList:s,fields:t,where:i,having:n,table:r,joins:l,orderBy:c,groupBy:u,limit:b,offset:w}){const v=e(t);for(const e of v)if(e.field instanceof f&&g(e.field.table)!==(r instanceof p?r[m].alias:r instanceof M?r[y].name:r instanceof o?void 0:g(r))&&!(e=>l.some((({alias:s})=>s===g(e))))(e.field.table)){const s=g(e.field.table);throw new Error(`Your "${e.path.join("->")}" field references a column "${s}"."${e.field.name}", but the table "${s}" is not part of the query! Did you forget to join it?`)}const S=0===l.length;let $;if(s.length){const e=[h`with `];for(const[t,i]of s.entries())e.push(h`${d(i[m].alias)} as (${i[m].sql})`),t<s.length-1&&e.push(h`, `);e.push(h` `),$=h.fromList(e)}const q=this.buildSelection(v,{isSingleTable:S}),Q=r instanceof a&&r[a.Symbol.OriginalName]!==r[a.Symbol.Name]?h`${d(r[a.Symbol.OriginalName])} ${d(r[a.Symbol.Name])}`:r,L=[];for(const[e,s]of l.entries()){0===e&&L.push(h` `);const t=s.table;if(t instanceof N){const e=t[N.Symbol.Name],i=t[N.Symbol.Schema],n=t[N.Symbol.OriginalName],r=e===n?void 0:s.alias;L.push(h`${h.raw(s.joinType)} join ${i?h`${d(i)}.`:void 0}${d(n)}${r&&h` ${d(r)}`} on ${s.on}`)}else L.push(h`${h.raw(s.joinType)} join ${t} on ${s.on}`);e<l.length-1&&L.push(h` `)}const T=h.fromList(L),B=i?h` where ${i}`:void 0,j=n?h` having ${n}`:void 0,O=[];for(const[e,s]of c.entries())O.push(s),e<c.length-1&&O.push(h`, `);const E=[];for(const[e,s]of u.entries())E.push(s),e<u.length-1&&E.push(h`, `);const A=E.length>0?h` group by ${h.fromList(E)}`:void 0,C=O.length>0?h` order by ${h.fromList(O)}`:void 0,x=b?h` limit ${b}`:void 0,_=w?h` offset ${w}`:void 0;return h`${$}select ${q} from ${Q}${T}${B}${A}${j}${C}${x}${_}`}buildInsertQuery({table:e,values:s,onConflict:t,returning:i}){const n=1===s.length,r=[],c=e[a.Symbol.Columns],u=n?Object.keys(s[0]).map((e=>[e,c[e]])):Object.entries(c),f=u.map((([,e])=>d(e.name)));for(const[e,t]of s.entries()){const i=[];for(const[e,s]of u){const n=t[e];if(void 0===n||n instanceof l&&void 0===n.value){let e;e=null!==s.default&&void 0!==s.default?s.default instanceof o?s.default:b(s.default,s):h`null`,i.push(e)}else i.push(n)}r.push(i),e<s.length-1&&r.push(h`, `)}const g=h.fromList(r),p=i?h` returning ${this.buildSelection(i,{isSingleTable:!0})}`:void 0,m=t?h` on conflict ${t}`:void 0;return h`insert into ${e} ${f} values ${g}${m}${p}`}sqlToQuery(e){return e.toQuery({escapeName:this.escapeName,escapeParam:this.escapeParam,escapeString:this.escapeString})}}class D extends R{migrate(e,s){const t=h`
			CREATE TABLE IF NOT EXISTS "__drizzle_migrations" (
				id SERIAL PRIMARY KEY,
				hash text NOT NULL,
				created_at numeric
			)
		`;s.run(t);const i=s.values(h`SELECT id, hash, created_at FROM "__drizzle_migrations" ORDER BY created_at DESC LIMIT 1`)[0]??void 0;s.run(h`BEGIN`);try{for(const t of e)if(!i||Number(i[2])<t.folderMillis){for(const e of t.sql)s.run(h.raw(e));s.run(h`INSERT INTO "__drizzle_migrations" ("hash", "created_at") VALUES(${t.hash}, ${t.folderMillis})`)}s.run(h`COMMIT`)}catch(e){throw s.run(h`ROLLBACK`),e}}}class z extends R{async migrate(e,s){const t=h`
			CREATE TABLE IF NOT EXISTS "__drizzle_migrations" (
				id SERIAL PRIMARY KEY,
				hash text NOT NULL,
				created_at numeric
			)
		`;await s.run(t);const i=(await s.values(h`SELECT id, hash, created_at FROM "__drizzle_migrations" ORDER BY created_at DESC LIMIT 1`))[0]??void 0;await s.transaction((async s=>{for(const t of e)if(!i||Number(i[2])<t.folderMillis){for(const e of t.sql)await s.run(h.raw(e));await s.run(h`INSERT INTO "__drizzle_migrations" ("hash", "created_at") VALUES(${t.hash}, ${t.folderMillis})`)}}))}}class k{constructor(e,s,t,i=[]){this.fields=e,this.session=s,this.dialect=t,this.withList=i}from(e){const s=!!this.fields;let i;return i=this.fields?this.fields:e instanceof p?Object.fromEntries(Object.keys(e[m].selection).map((s=>[s,e[s]]))):e instanceof M?e[y].selectedFields:e instanceof o?{}:t(e),new J(e,i,s,this.session,this.dialect,this.withList)}}class U extends v{constructor(e,s,t,n,r,a){super(),this.isPartialSelect=t,this.session=n,this.dialect=r,this.leftJoin=this.createJoin("left"),this.rightJoin=this.createJoin("right"),this.innerJoin=this.createJoin("inner"),this.fullJoin=this.createJoin("full"),this.config={withList:a,table:e,fields:{...s},joins:[],orderBy:[],groupBy:[]},this._={selectedFields:s},this.tableName=i(e),this.joinsNotNullableMap="string"==typeof this.tableName?{[this.tableName]:!0}:{}}createJoin(e){return(s,t)=>{const n=this.tableName,r=i(s);if("string"==typeof r&&this.config.joins.some((e=>e.alias===r)))throw new Error(`Alias "${r}" is already used in this query`);if(!(this.isPartialSelect||(1===Object.keys(this.joinsNotNullableMap).length&&"string"==typeof n&&(this.config.fields={[n]:this.config.fields}),"string"!=typeof r||s instanceof o))){const e=s instanceof p?s[m].selection:s instanceof u?s[y].selectedFields:s[a.Symbol.Columns];this.config.fields[r]=e}if("function"==typeof t&&(t=t(new Proxy(this.config.fields,new c({sqlAliasedBehavior:"sql",sqlBehavior:"sql"})))),this.config.joins.push({on:t,table:s,joinType:e,alias:r}),"string"==typeof r)switch(e){case"left":this.joinsNotNullableMap[r]=!1;break;case"right":this.joinsNotNullableMap=Object.fromEntries(Object.entries(this.joinsNotNullableMap).map((([e])=>[e,!1]))),this.joinsNotNullableMap[r]=!0;break;case"inner":this.joinsNotNullableMap[r]=!0;break;case"full":this.joinsNotNullableMap=Object.fromEntries(Object.entries(this.joinsNotNullableMap).map((([e])=>[e,!1]))),this.joinsNotNullableMap[r]=!1}return this}}where(e){return"function"==typeof e&&(e=e(new Proxy(this.config.fields,new c({sqlAliasedBehavior:"sql",sqlBehavior:"sql"})))),this.config.where=e,this}having(e){return"function"==typeof e&&(e=e(new Proxy(this.config.fields,new c({sqlAliasedBehavior:"sql",sqlBehavior:"sql"})))),this.config.having=e,this}groupBy(...e){if("function"==typeof e[0]){const s=e[0](new Proxy(this.config.fields,new c({sqlAliasedBehavior:"alias",sqlBehavior:"sql"})));this.config.groupBy=Array.isArray(s)?s:[s]}else this.config.groupBy=e;return this}orderBy(...e){if("function"==typeof e[0]){const s=e[0](new Proxy(this.config.fields,new c({sqlAliasedBehavior:"alias",sqlBehavior:"sql"})));this.config.orderBy=Array.isArray(s)?s:[s]}else this.config.orderBy=e;return this}limit(e){return this.config.limit=e,this}offset(e){return this.config.offset=e,this}getSQL(){return this.dialect.buildSelectQuery(this.config)}toSQL(){const{typings:e,...s}=this.dialect.sqlToQuery(this.getSQL());return s}as(e){return new Proxy(new p(this.getSQL(),this.config.fields,e),new c({alias:e,sqlAliasedBehavior:"alias",sqlBehavior:"error"}))}getSelectedFields(){return new Proxy(this.config.fields,new c({alias:this.tableName,sqlAliasedBehavior:"alias",sqlBehavior:"error"}))}}class J extends U{constructor(){super(...arguments),this.run=e=>this.prepare(!0).run(e),this.all=e=>this.prepare(!0).all(e),this.get=e=>this.prepare(!0).get(e),this.values=e=>this.prepare(!0).values(e)}prepare(s){if(!this.session)throw new Error("Cannot execute a query on a query builder. Please use a database instance instead.");const t=e(this.config.fields),i=this.session[s?"prepareOneTimeQuery":"prepareQuery"](this.dialect.sqlToQuery(this.getSQL()),t);return i.joinsNotNullableMap=this.joinsNotNullableMap,i}}class Y{$with(e){const s=this;return{as:t=>("function"==typeof t&&(t=t(s)),new Proxy(new w(t.getSQL(),t.getSelectedFields(),e,!0),new c({alias:e,sqlAliasedBehavior:"alias",sqlBehavior:"error"})))}}with(...e){const s=this;return{select:function(t){return new k(t??void 0,void 0,s.getDialect(),e)}}}select(e){return new k(e??void 0,void 0,this.getDialect())}getDialect(){return this.dialect||(this.dialect=new D),this.dialect}}class K{constructor(e,s,t){this.table=e,this.session=s,this.dialect=t}set(e){return new V(this.table,s(this.table,e),this.session,this.dialect)}}class V{constructor(e,s,t,i){this.session=t,this.dialect=i,this.run=e=>this.prepare(!0).run(e),this.all=e=>this.prepare(!0).all(e),this.get=e=>this.prepare(!0).get(e),this.values=e=>this.prepare(!0).values(e),this.config={set:s,table:e}}where(e){return this.config.where=e,this}returning(s=this.config.table[N.Symbol.Columns]){return this.config.returning=e(s),this}getSQL(){return this.dialect.buildUpdateQuery(this.config)}toSQL(){const{typings:e,...s}=this.dialect.sqlToQuery(this.getSQL());return s}prepare(e){return this.session[e?"prepareOneTimeQuery":"prepareQuery"](this.dialect.sqlToQuery(this.getSQL()),this.config.returning)}}class X{constructor(e,s){this.dialect=e,this.session=s}$with(e){return{as:s=>("function"==typeof s&&(s=s(new Y)),new Proxy(new w(s.getSQL(),s.getSelectedFields(),e,!0),new c({alias:e,sqlAliasedBehavior:"alias",sqlBehavior:"error"})))}}with(...e){const s=this;return{select:function(t){return new k(t??void 0,s.session,s.dialect,e)}}}select(e){return new k(e??void 0,this.session,this.dialect)}update(e){return new K(e,this.session,this.dialect)}insert(e){return new O(e,this.session,this.dialect)}delete(e){return new j(e,this.session,this.dialect)}run(e){return this.session.run(e.getSQL())}all(e){return this.session.all(e.getSQL())}get(e){return this.session.get(e.getSQL())}values(e){return this.session.values(e.getSQL())}transaction(e,s){return this.session.transaction(e,s)}}class G extends X{constructor(e,s,t=0){super(e,s),this.nestedIndex=t}rollback(){throw new n}}let W=class{};class H{constructor(e){this.dialect=e}prepareOneTimeQuery(e,s){return this.prepareQuery(e,s)}run(e){const s=this.dialect.sqlToQuery(e);try{return this.prepareOneTimeQuery(s,void 0).run()}catch(e){throw r.wrap(e,`Failed to run the query '${s.sql}'`)}}all(e){return this.prepareOneTimeQuery(this.dialect.sqlToQuery(e),void 0).all()}get(e){return this.prepareOneTimeQuery(this.dialect.sqlToQuery(e),void 0).get()}values(e){return this.prepareOneTimeQuery(this.dialect.sqlToQuery(e),void 0).values()}}export{X as B,Q as E,q as I,x as M,W as P,Y as Q,H as S,A as V,G as a,D as b,z as c,N as d,_ as e,R as f,j as g,O as h,E as i,k as j,U as k,J as l,K as m,V as n,B as o,C as p,M as q,I as r,T as s,P as t,F as v};
//# sourceMappingURL=session-b977ce56.mjs.map
